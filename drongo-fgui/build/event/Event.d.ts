import { Event as CCEvent, Vec2 } from 'cc';
import { GObject } from '../GObject';
import { InputProcessor } from './InputProcessor';
export declare class Event extends CCEvent {
    static TOUCH_BEGIN: string;
    static TOUCH_MOVE: string;
    static TOUCH_END: string;
    static CLICK: string;
    static ROLL_OVER: string;
    static ROLL_OUT: string;
    static MOUSE_WHEEL: string;
    static DISPLAY: string;
    static UNDISPLAY: string;
    static GEAR_STOP: string;
    static LINK: string;
    static Submit: string;
    static TEXT_CHANGE: string;
    static STATUS_CHANGED: string;
    static XY_CHANGED: string;
    static SIZE_CHANGED: string;
    static SIZE_DELAY_CHANGE: string;
    static DRAG_START: string;
    static DRAG_MOVE: string;
    static DRAG_END: string;
    static DROP: string;
    static SCROLL: string;
    static SCROLL_END: string;
    static PULL_DOWN_RELEASE: string;
    static PULL_UP_RELEASE: string;
    static CLICK_ITEM: string;
    initiator: GObject;
    pos: Vec2;
    touchId: number;
    clickCount: number;
    button: number;
    keyModifiers: number;
    mouseWheelDelta: number;
    _processor: InputProcessor;
    constructor(type: string, bubbles: boolean);
    get sender(): GObject | null;
    get isShiftDown(): boolean;
    get isCtrlDown(): boolean;
    captureTouch(): void;
}
export declare function borrowEvent(type: string, bubbles?: boolean): Event;
export declare function returnEvent(evt: Event): void;
