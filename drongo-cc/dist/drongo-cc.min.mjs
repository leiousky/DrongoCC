import{sys,Texture2D,gfx,find,Node,director,Component as Component$1,Asset,Prefab,instantiate,isValid,assetManager,SpriteFrame,AudioSource,BufferAsset}from"cc";import{DEBUG}from"cc/env";class Injector{static inject(t,e){e instanceof Function?this.__injectedMap.set(t,e):this.__instanceMap.set(t,e)}static getInject(t){let e=this.__instanceMap.get(t);if(e)return e;let i=this.__injectedMap.get(t);return void 0===i?null:(e=new i,this.__instanceMap.set(t,e),e)}}Injector.__injectedMap=new Map,Injector.__instanceMap=new Map;class EventDispatcher{constructor(){this.callerMap=new Map,this.keyMap=new Map,this.needEmit=new Array}on(t,e,i,s=0){let r,n;if(this.keyMap.has(t)){r=this.keyMap.get(t);for(const s of r)if(s.target==i&&s.handler==e)return void console.error("重复添加同一个事件监听："+t+" "+i+" "+e)}else r=[],this.keyMap.set(t,r);if(n=new EventInfo(t,i,e),r.push(n),r.sort((t,e)=>t.priority-s),this.callerMap.has(i)){r=this.callerMap.get(i);for(const s of r)s.key==t&&s.handler==e&&console.error("事件系统 处理器关联错误："+t+" "+i+" "+e)}else r=[],this.callerMap.set(i,r);r.push(n)}off(t,e,i){if(0==this.keyMap.has(t))return;let s,r=this.keyMap.get(t),n=null;for(let t=0;t<r.length;t++)if(s=r[t],s.target==i&&s.handler==e){n=s,r.splice(t,1);break}if(this.callerMap.has(i)){r=this.callerMap.get(i);for(let i=0;i<r.length;i++)if(s=r[i],s.key==t&&s.handler==e){n=s,r.splice(i,1);break}}n&&n.destroy()}offByCaller(t){let e,i=this.callerMap.get(t);if(void 0!==i&&0!=i.length){for(;i.length;)e=i[0],this.off(e.key,e.handler,e.target);this.callerMap.delete(t)}}offAllEvent(){this.keyMap.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.keyMap.clear(),this.callerMap.clear()}emit(t,e){for(let i=0;i<this.needEmit.length;i++){const s=this.needEmit[i];if(s.type==t&&s.data===e)return}this.needEmit.push({type:t,data:e}),TickerManager.callNextFrame(this.__emit,this)}__emit(){for(let t=0;t<this.needEmit.length;t++){const e=this.needEmit[t];if(0==this.keyMap.has(e.type))continue;let i,s=this.keyMap.get(e.type);for(let t=0;t<s.length;t++)i=s[t],i.handler.apply(i.target,[e.type,this,e.data])}this.needEmit.length=0}hasEvent(t){return this.keyMap.has(t)}hasEventHandler(t,e,i){if(0==this.keyMap.has(t))return!1;let s,r=this.keyMap.get(t);for(let t=0;t<r.length;t++)if(s=r[t],s.target==i&&s.handler==e)return!0;return!1}destroy(){this.callerMap.clear(),this.keyMap.clear()}}class EventInfo{constructor(t,e,i){this.key="",this.priority=255,this.key=t,this.target=e,this.handler=i}destroy(){}}class Event{static getChannel(t="main"){return this.channels.get(t)}static emit(t,e,i="main"){if(!this.channels.has(i))return;this.channels.get(i).emit(t,e)}static on(t,e,i,s=0,r="main"){let n;this.channels.has(r)?n=this.channels.get(r):(n=new EventDispatcher,this.channels.set(r,n)),n.on(t,e,i,s)}static off(t,e,i,s="main"){let r;this.channels.has(s)&&(r=this.channels.get(s),r.off(t,e,i))}static offByCaller(t,e="main"){let i;this.channels.has(e)&&(i=this.channels.get(e),i.offByCaller(t))}static offAll(t="main"){let e;this.channels.has(t)&&(e=this.channels.get(t),e.offAllEvent())}}Event.START="start",Event.PROGRESS="progress",Event.COMPLETE="complete",Event.ERROR="error",Event.SHOW="show",Event.HIDE="hide",Event.ADD="add",Event.REMOVE="remove",Event.UPDATE="update",Event.CLEAR="clear",Event.State_Changed="stateChanged",Event.channels=new Map;class Dictionary extends EventDispatcher{constructor(){super(),this.__map=new Map,this.__list=[]}set(t,e){let i;if(this.__map.has(t)){i=this.__map.get(t);const e=this.__list.indexOf(i);if(e<0)throw new Error("Dictionary内部逻辑错误！");this.__map.delete(t),this.__list.splice(e,1),this.emit(Event.REMOVE,i)}this.__map.set(t,e),this.__list.push(e),this.emit(Event.ADD,e)}has(t){return this.__map.has(t)}get(t){return this.__map.get(t)}getValue(t){if(t>=this.__list.length)throw new Error(t+"索引超出0-"+this.__list.length+"范围");return this.__list[t]}delete(t){if(!this.__map.has(t))return;const e=this.__map.get(t),i=this.__list.indexOf(e);if(i<0)throw new Error("Dictionary内部逻辑错误！");return this.__list.splice(i,1),this.__map.delete(t),this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,e),e}clear(){this.__map.clear(),this.__list.length=0}get elements(){return this.__list}get size(){return this.__map.size}destroy(){super.destroy(),this.__map.clear(),this.__map=null,this.__list=null}}class Debuger{static debug(t,e){this.__debuger.set(t,e)}static getLogs(t){return null!=t&&null!=t||(t="all"),this.__logs.has(t)?this.__logs.get(t):null}static __save(t,e,i){let s;this.__logs.has(t)?s=this.__logs.get(t):(s=[],this.__logs.set(t,s));let r="["+t+"]"+e+":"+i;return s.length>=this.MaxCount&&s.unshift(),s.push(r),this.__logs.has("all")?s=this.__logs.get("all"):(s=[],this.__logs.set("all",s)),s.length>=this.MaxCount&&s.unshift(),s.push(r),r}static log(t,e){let i=this.__save(t,"Log",e),s=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(s||r)&&console.log(i)}static err(t,e){let i=this.__save(t,"Error",e),s=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(s||r)&&console.error(i)}static warn(t,e){let i=this.__save(t,"Warn",e),s=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(s||r)&&console.warn(i)}static info(t,e){let i=this.__save(t,"Info",e),s=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(s||r)&&console.info(i)}}Debuger.MaxCount=1e3,Debuger.__logs=new Dictionary,Debuger.__debuger=new Map;class Pool{constructor(t,e){if(this.__cacheStack=new Array,this.__usingArray=new Array,this.__maxCount=0,this.__class=t,!this.__class)throw new Error("构造函数不能为空！");this.__maxCount=null==e?Number.MAX_SAFE_INTEGER:e}get count(){return this.__cacheStack.length}get usingCount(){return this.__usingArray.length}allocate(){if(this.count+this.usingCount<this.__maxCount){let t=this.__cacheStack.length>0?this.__cacheStack.pop():new this.__class;return this.__usingArray.push(t),t}throw new Error("对象池最大数量超出："+this.__maxCount)}recycle(t){if(this.__cacheStack.indexOf(t)>-1)throw new Error("重复回收！");let e=this.__usingArray.indexOf(t);if(e<0)throw new Error("对象不属于改对象池！");t.reset(),this.__usingArray.splice(e,1),this.__cacheStack.push(t)}recycleList(t){for(let e=0;e<t.length;e++){const i=t[e];this.recycle(i)}}recycleAll(){for(let t=0;t<this.__usingArray.length;t++){const e=this.__usingArray[t];this.recycle(e)}}destroy(){this.recycleAll();for(let t=0;t<this.__cacheStack.length;t++){this.__cacheStack[t].destroy()}this.__cacheStack.length=0,this.__cacheStack=null,this.__usingArray.length=0,this.__usingArray=null}}class BitFlag{constructor(){this.__flags=0,this.__elements=[]}add(t){this.__flags|=t,this.__elements.indexOf(t)<0&&this.__elements.push(t)}remove(t){this.__flags^=t;let e=this.__elements.indexOf(t);e>=0&&this.__elements.splice(e,1)}has(t){return(this.__flags&t)==t}get flags(){return this.__flags}get elements(){return this.__elements}destroy(){this.__flags=0,this.__elements.length=0,this.__elements=null}}class LocalStorage{static init(t){this.__gameName=t;let e=sys.localStorage.getItem(this.__gameName);this.data=e?JSON.parse(e):{}}static getItem(t){return this.data[t]}static setItem(t,e){this.data[t]=e}static clearItem(t){delete this.data[t]}static clearAll(){this.data={}}static save(){let t=JSON.stringify(this.data);sys.localStorage.setItem(this.__gameName,t)}}class StringUtils{static isEmpty(t){return null==t||null==t||0==t.length}static substitute(t,...e){if(null==t)return"";var i,s=e.length;1==s&&e[0]instanceof Array?s=(i=e[0]).length:i=e;for(var r=0;r<s;r++)t=t.replace(new RegExp("\\{"+r+"\\}","g"),i[r]);return t}static replaceAll(t,e,i){return t.split(e).join(i)}static splitString(t,e,i){let s=new Array;return t.split(e).forEach((t,e)=>{let r=t.split(i);s.push(r)}),s}static getFileSuffix(t){let e=t.lastIndexOf(".");if(e<0)throw new Error(t+"没有后缀！！！");return t.substring(e+1)}static replaceSuffix(t,e){let i=t.lastIndexOf(".");if(i<0)throw new Error(t+"没有后缀！！！");let s=t.substring(i+1);return t.replace(s,e)}}var FindPosition;!function(t){t[t.ShortSideFit=0]="ShortSideFit",t[t.BottomLeft=1]="BottomLeft",t[t.ContactPoint=2]="ContactPoint",t[t.LongSideFit=3]="LongSideFit",t[t.AreaFit=4]="AreaFit"}(FindPosition||(FindPosition={}));class MaxRectBinPack{constructor(t,e,i){this.freeRects=[],this.usedRects=[],this.containerHeight=e,this.containerWidth=t,this.allowRotate=!0===i;const s=new Rect;s.x=0,s.y=0,s.width=t,s.height=e,this.freeRects.push(s)}insert(t,e,i){if(t<=0||e<=0)throw new Error(`width & height should greater than 0, but got width as ${t}, height as ${e}`);(i<=FindPosition.ShortSideFit||i>=FindPosition.AreaFit)&&(i=FindPosition.ShortSideFit);let s=new Rect;const r={value:0},n={value:0};switch(i){case FindPosition.ShortSideFit:s=this.findPositionForNewNodeBestShortSideFit(t,e,r,n);break;case FindPosition.BottomLeft:s=this.findPositionForNewNodeBottomLeft(t,e,r,n);break;case FindPosition.ContactPoint:s=this.findPositionForNewNodeContactPoint(t,e,r);break;case FindPosition.LongSideFit:s=this.findPositionForNewNodeBestLongSideFit(t,e,n,r);break;case FindPosition.AreaFit:s=this.findPositionForNewNodeBestAreaFit(t,e,r,n)}return 0===s.height||(this.allowRotate&&(s.height===e&&s.width===t?s.isRotated=!1:s.isRotated=!0),this.placeRectangle(s)),s}get occupancy(){let t=0;for(const e of this.usedRects)t+=e.width*e.height;return t/(this.containerWidth*this.containerHeight)}eraseNoce(t){let e=this.usedRects.indexOf(t);-1!=e&&this.usedRects.splice(e,1),e=this.freeRects.indexOf(t),-1==e&&(this.freeRects.push(t),this.pruneFreeList())}placeRectangle(t){let e=this.freeRects.length;for(let i=0;i<e;i++)this.splitFreeNode(this.freeRects[i],t)&&(this.freeRects.splice(i,1),i--,e--);this.pruneFreeList(),this.usedRects.push(t)}scoreRectangle(t,e,i,s,r){let n=new Rect;switch(s.value=1/0,r.value=1/0,i){case FindPosition.ShortSideFit:n=this.findPositionForNewNodeBestShortSideFit(t,e,s,r);break;case FindPosition.BottomLeft:n=this.findPositionForNewNodeBottomLeft(t,e,s,r);break;case FindPosition.ContactPoint:n=this.findPositionForNewNodeContactPoint(t,e,s),s.value=-s.value;break;case FindPosition.LongSideFit:n=this.findPositionForNewNodeBestLongSideFit(t,e,r,s);break;case FindPosition.AreaFit:n=this.findPositionForNewNodeBestAreaFit(t,e,s,r)}return 0===n.height&&(s.value=1/0,r.value=1/0),n}findPositionForNewNodeBottomLeft(t,e,i,s){this.freeRects;const r=new Rect;let n;i.value=1/0;for(const a of this.freeRects)a.width>=t&&a.height>=e&&(n=a.y+e,(n<i.value||n===i.value&&a.x<s.value)&&(r.x=a.x,r.y=a.y,r.width=t,r.height=e,i.value=n,s.value=a.x)),this.allowRotate&&a.width>=e&&a.height>=t&&(n=a.y+t,(n<i.value||n===i.value&&a.x<s.value)&&(r.x=a.x,r.y=a.y,r.width=e,r.height=t,i.value=n,s.value=a.x));return r}findPositionForNewNodeBestShortSideFit(t,e,i,s){const r=new Rect;let n,a,h,o;i.value=1/0;for(const l of this.freeRects){let _,c,u,d;l.width>=t&&l.height>=e&&(n=Math.abs(l.width-t),a=Math.abs(l.height-e),h=Math.min(n,a),o=Math.max(n,a),(h<i.value||h===i.value&&o<s.value)&&(r.x=l.x,r.y=l.y,r.width=t,r.height=e,i.value=h,s.value=o)),this.allowRotate&&l.width>=e&&l.height>=t&&(_=Math.abs(l.width-e),c=Math.abs(l.height-t),u=Math.min(_,c),d=Math.max(_,c),(u<i.value||u===i.value&&d<s.value)&&(r.x=l.x,r.y=l.y,r.width=e,r.height=t,i.value=u,s.value=d))}return r}findPositionForNewNodeBestLongSideFit(t,e,i,s){const r=new Rect;let n,a,h,o;s.value=1/0;for(const l of this.freeRects)l.width>=t&&l.height>=e&&(n=Math.abs(l.width-t),a=Math.abs(l.height-e),h=Math.min(n,a),o=Math.max(n,a),(o<s.value||o===s.value&&h<i.value)&&(r.x=l.x,r.y=l.y,r.width=t,r.height=e,i.value=h,s.value=o)),this.allowRotate&&l.width>=e&&l.height>=t&&(n=Math.abs(l.width-e),a=Math.abs(l.height-t),h=Math.min(n,a),o=Math.max(n,a),(o<s.value||o===s.value&&h<i.value)&&(r.x=l.x,r.y=l.y,r.width=e,r.height=t,i.value=h,s.value=o));return r}findPositionForNewNodeBestAreaFit(t,e,i,s){const r=new Rect;let n,a,h,o;i.value=1/0;for(const l of this.freeRects)o=l.width*l.height-t*e,l.width>=t&&l.height>=e&&(n=Math.abs(l.width-t),a=Math.abs(l.height-e),h=Math.min(n,a),(o<i.value||o===i.value&&h<s.value)&&(r.x=l.x,r.y=l.y,r.width=t,r.height=e,s.value=h,i.value=o)),this.allowRotate&&l.width>=e&&l.height>=t&&(n=Math.abs(l.width-e),a=Math.abs(l.height-t),h=Math.min(n,a),(o<i.value||o===i.value&&h<s.value)&&(r.x=l.x,r.y=l.y,r.width=e,r.height=t,s.value=h,i.value=o));return r}commonIntervalLength(t,e,i,s){return e<i||s<t?0:Math.min(e,s)-Math.max(t,i)}contactPointScoreNode(t,e,i,s){let r=0;0!==t&&t+i!==this.containerWidth||(r+=s),0!==e&&e+s!==this.containerHeight||(r+=i);for(const n of this.usedRects)n.x!==t+i&&n.x+n.width!==t||(r+=this.commonIntervalLength(n.y,n.y+n.height,e,e+s)),n.y!==e+s&&n.y+n.height!==e||(r+=this.commonIntervalLength(n.x,n.x+n.width,t,t+i));return r}findPositionForNewNodeContactPoint(t,e,i){const s=new Rect;let r;i.value=-1;for(const n of this.freeRects)n.width>=t&&n.height>=e&&(r=this.contactPointScoreNode(n.x,n.y,t,e),r>i.value&&(s.x=n.x,s.y=n.y,s.width=t,s.height=e,i.value=r)),this.allowRotate&&n.width>=e&&n.height>=t&&(r=this.contactPointScoreNode(n.x,n.y,e,t),r>i.value&&(s.x=n.x,s.y=n.y,s.width=e,s.height=t,i.value=r));return s}splitFreeNode(t,e){const i=this.freeRects;if(e.x>=t.x+t.width||e.x+e.width<=t.x||e.y>=t.y+t.height||e.y+e.height<=t.y)return!1;let s;return e.x<t.x+t.width&&e.x+e.width>t.x&&(e.y>t.y&&e.y<t.y+t.height&&(s=t.clone(),s.height=e.y-s.y,i.push(s)),e.y+e.height<t.y+t.height&&(s=t.clone(),s.y=e.y+e.height,s.height=t.y+t.height-(e.y+e.height),i.push(s))),e.y<t.y+t.height&&e.y+e.height>t.y&&(e.x>t.x&&e.x<t.x+t.width&&(s=t.clone(),s.width=e.x-s.x,i.push(s)),e.x+e.width<t.x+t.width&&(s=t.clone(),s.x=e.x+e.width,s.width=t.x+t.width-(e.x+e.width),i.push(s))),!0}pruneFreeList(){const t=this.freeRects;for(let e=0;e<t.length;e++)for(let i=e+1;i<t.length;i++){if(t[e].isIn(t[i])){t.splice(e,1);break}t[i].isIn(t[e])&&t.splice(i,1)}}}class Rect{constructor(){this.x=0,this.y=0,this.width=0,this.height=0,this.isRotated=!1}clone(){const t=new Rect;return t.x=this.x,t.y=this.y,t.height=this.height,t.width=this.width,t.info=this.info,t}isIn(t){return this.x>=t.x&&this.y>=t.y&&this.x+this.width<=t.x+t.width&&this.y+this.height<=t.y+t.height}get isEmpty(){return 0==this.x&&0==this.y&&0==this.width&&0==this.height}}class RGBA8888Texture extends Texture2D{constructor(t,e){super(),this.reset({width:t,height:e,format:Texture2D.PixelFormat.RGBA8888})}fillRect(t,e,i,s,r){let n=r>>24&255,a=r>>16&255,h=r>>8&255,o=255&r;this.__fillRect(t,e,i,s,n,a,h,o)}__fillRect(t,e,i,s,r,n,a,h){let o,l=new Uint8Array(i*s*4);for(let t=0;t<i;t++)for(let e=0;e<s;e++)o=4*(e*i+t),l[o]=n,l[o+1]=a,l[o+2]=h,l[o+3]=r;this.copyBuffersToTexture(l,t,e,i,s)}setPixel(t,e,i,s,r,n){this.__fillRect(r,n,1,1,s,t,e,i)}setPixelColor(t,e,i){let s=t>>24&255,r=t>>16&255,n=t>>8&255,a=255&t;this.setPixel(r,n,a,s,e,i)}draw2Texture(t,e,i,s,r,n,a,h=gfx.Filter.POINT){let o=new Uint8Array(s*r*4),l=new gfx.BufferTextureCopy;l.texOffset.x=e,l.texOffset.y=i,l.texExtent.width=s,l.texExtent.height=r,this._getGFXDevice().copyTextureToBuffers(t.getGFXTexture(),[o],[l]),l.texOffset.x=n,l.texOffset.y=a,this._getGFXDevice().copyBuffersToTexture([o],this.getGFXTexture(),[l])}copyBuffersToTexture(t,e,i,s,r){let n=new gfx.BufferTextureCopy;n.texOffset.x=e,n.texOffset.y=i,n.texExtent.width=s,n.texExtent.height=r;const a=this.getGFXTexture();a&&this._getGFXDevice().copyBuffersToTexture([t],a,[n])}}class Handler{constructor(){this.once=!0}run(...t){this.method&&!this.isOver&&(this.method.apply(this.caller,t),this.once&&(this.isOver=!0))}equal(t){return this.method==t.method&&this.caller==t.caller}static create(t,e,i){var s=new Handler;return s.caller=t,s.method=e,s.once=i,s.isOver=!1,s}}class Endian{}Endian.LITTLE_ENDIAN="littleEndian",Endian.BIG_ENDIAN="bigEndian";class ByteArray{get endian(){return 0==this.$endian?Endian.LITTLE_ENDIAN:Endian.BIG_ENDIAN}set endian(t){this.$endian=t==Endian.LITTLE_ENDIAN?0:1}constructor(t,e=0){this.bufferExtSize=0,this.EOF_byte=-1,this.EOF_code_point=-1,e<0&&(e=0),this.bufferExtSize=e;let i,s=0;if(t){let r;if(t instanceof Uint8Array?(r=t,s=t.length):(s=t.byteLength,r=new Uint8Array(t)),0==e)i=new Uint8Array(s);else{i=new Uint8Array((1+(s/e|0))*e)}i.set(r)}else i=new Uint8Array(e);this.write_position=s,this._position=0,this._bytes=i,this.data=new DataView(i.buffer),this.endian=Endian.BIG_ENDIAN}reset(){this.clear()}destroy(){this._bytes=null,this.data=null}setArrayBuffer(t){}get readAvailable(){return this.write_position-this._position}get buffer(){return this.data.buffer.slice(0,this.write_position)}get rawBuffer(){return this.data.buffer}set buffer(t){let e,i=t.byteLength,s=new Uint8Array(t),r=this.bufferExtSize;if(0==r)e=new Uint8Array(i);else{e=new Uint8Array((1+(i/r|0))*r)}e.set(s),this.write_position=i,this._bytes=e,this.data=new DataView(e.buffer)}get bytes(){return this._bytes}get dataView(){return this.data}set dataView(t){this.buffer=t.buffer}get bufferOffset(){return this.data.byteOffset}get position(){return this._position}set position(t){this._position=t,t>this.write_position&&(this.write_position=t)}get length(){return this.write_position}set length(t){this.write_position=t,this.data.byteLength>t&&(this._position=t),this._validateBuffer(t)}_validateBuffer(t){if(this.data.byteLength<t){let e,i=this.bufferExtSize;if(0==i)e=new Uint8Array(t);else{e=new Uint8Array((1+(t/i>>0))*i)}e.set(this._bytes),this._bytes=e,this.data=new DataView(e.buffer)}}get bytesAvailable(){return this.data.byteLength-this._position}clear(){let t=new ArrayBuffer(this.bufferExtSize);this.data=new DataView(t),this._bytes=new Uint8Array(t),this._position=0,this.write_position=0}readBoolean(){if(this.validate(1))return!!this._bytes[this.position++]}readByte(){if(this.validate(1))return this.data.getInt8(this.position++)}readBytes(t,e=0,i=0){if(!t)return;let s=this._position,r=this.write_position-s;if(r<0)return void console.error(1025);if(0==i)i=r;else if(i>r)return void console.error(1025);const n=t._position;t._position=0,t.validateBuffer(e+i),t._position=n,t._bytes.set(this._bytes.subarray(s,s+i),e),this.position+=i}readDouble(){if(this.validate(8)){let t=this.data.getFloat64(this._position,0==this.$endian);return this.position+=8,t}}readFloat(){if(this.validate(4)){let t=this.data.getFloat32(this._position,0==this.$endian);return this.position+=4,t}}readInt(){if(this.validate(4)){let t=this.data.getInt32(this._position,0==this.$endian);return this.position+=4,t}}readShort(){if(this.validate(2)){let t=this.data.getInt16(this._position,0==this.$endian);return this.position+=2,t}}readUnsignedByte(){if(this.validate(1))return this._bytes[this.position++]}readUnsignedInt(){if(this.validate(4)){let t=this.data.getUint32(this._position,0==this.$endian);return this.position+=4,t}}readUnsignedShort(){if(this.validate(2)){let t=this.data.getUint16(this._position,0==this.$endian);return this.position+=2,t}}readUTF(){let t=this.readUnsignedShort();return t>0?this.readUTFBytes(t):""}readUTFBytes(t){if(!this.validate(t))return;let e=this.data,i=new Uint8Array(e.buffer,e.byteOffset+this._position,t);return this.position+=t,this.decodeUTF8(i)}writeBoolean(t){this.validateBuffer(1),this._bytes[this.position++]=+t}writeByte(t){this.validateBuffer(1),this._bytes[this.position++]=255&t}writeBytes(t,e=0,i=0){let s;e<0||i<0||(s=0==i?t.length-e:Math.min(t.length-e,i),s>0&&(this.validateBuffer(s),this._bytes.set(t._bytes.subarray(e,e+s),this._position),this.position=this._position+s))}writeDouble(t){this.validateBuffer(8),this.data.setFloat64(this._position,t,0==this.$endian),this.position+=8}writeFloat(t){this.validateBuffer(4),this.data.setFloat32(this._position,t,0==this.$endian),this.position+=4}writeInt(t){this.validateBuffer(4),this.data.setInt32(this._position,t,0==this.$endian),this.position+=4}writeShort(t){this.validateBuffer(2),this.data.setInt16(this._position,t,0==this.$endian),this.position+=2}writeUnsignedInt(t){this.validateBuffer(4),this.data.setUint32(this._position,t,0==this.$endian),this.position+=4}writeUnsignedShort(t){this.validateBuffer(2),this.data.setUint16(this._position,t,0==this.$endian),this.position+=2}writeUTF(t){let e=this.encodeUTF8(t),i=e.length;this.validateBuffer(2+i),this.data.setUint16(this._position,i,0==this.$endian),this.position+=2,this._writeUint8Array(e,!1)}writeUTFBytes(t){this._writeUint8Array(this.encodeUTF8(t))}toString(){return"[ByteArray] length:"+this.length+", bytesAvailable:"+this.bytesAvailable}_writeUint8Array(t,e=!0){let i=this._position,s=i+t.length;e&&this.validateBuffer(s),this.bytes.set(t,i),this.position=s}validate(t){let e=this._bytes.length;if(e>0&&this._position+t<=e)return!0;console.error(1025)}validateBuffer(t){this.write_position=t>this.write_position?t:this.write_position,t+=this._position,this._validateBuffer(t)}encodeUTF8(t){let e=0,i=this.stringToCodePoints(t),s=[];for(;i.length>e;){let t=i[e++];if(this.inRange(t,55296,57343))this.encoderError(t);else if(this.inRange(t,0,127))s.push(t);else{let e,i;for(this.inRange(t,128,2047)?(e=1,i=192):this.inRange(t,2048,65535)?(e=2,i=224):this.inRange(t,65536,1114111)&&(e=3,i=240),s.push(this.div(t,Math.pow(64,e))+i);e>0;){let i=this.div(t,Math.pow(64,e-1));s.push(128+i%64),e-=1}}}return new Uint8Array(s)}decodeUTF8(t){let e,i=0,s="",r=0,n=0,a=0,h=0;for(;t.length>i;){let o=t[i++];if(o==this.EOF_byte)e=0!=n?this.decoderError(!1):this.EOF_code_point;else if(0==n)this.inRange(o,0,127)?e=o:(this.inRange(o,194,223)?(n=1,h=128,r=o-192):this.inRange(o,224,239)?(n=2,h=2048,r=o-224):this.inRange(o,240,244)?(n=3,h=65536,r=o-240):this.decoderError(!1),r*=Math.pow(64,n),e=null);else if(this.inRange(o,128,191))if(a+=1,r+=(o-128)*Math.pow(64,n-a),a!==n)e=null;else{let t=r,i=h;r=0,n=0,a=0,h=0,e=this.inRange(t,i,1114111)&&!this.inRange(t,55296,57343)?t:this.decoderError(!1,o)}else r=0,n=0,a=0,h=0,i--,e=this.decoderError(!1,o);null!==e&&e!==this.EOF_code_point&&(e<=65535?e>0&&(s+=String.fromCharCode(e)):(e-=65536,s+=String.fromCharCode(55296+(e>>10&1023)),s+=String.fromCharCode(56320+(1023&e))))}return s}encoderError(t){console.error(1026,t)}decoderError(t,e){return t&&console.error(1027),e||65533}inRange(t,e,i){return e<=t&&t<=i}div(t,e){return Math.floor(t/e)}stringToCodePoints(t){let e=[],i=0,s=t.length;for(;i<t.length;){let r=t.charCodeAt(i);if(this.inRange(r,55296,57343))if(this.inRange(r,56320,57343))e.push(65533);else if(i==s-1)e.push(65533);else{let s=t.charCodeAt(i+1);if(this.inRange(s,56320,57343)){let t=1023&r,n=1023&s;i+=1,e.push(65536+(t<<10)+n)}else e.push(65533)}else e.push(r);i+=1}return e}}class List extends EventDispatcher{constructor(t=!0){super(),this.__only=!1,this.count=0,this.__only=t,this.__element=[]}push(t){if(this.__only){if(this.__element.indexOf(t)>=0)return!1}return this.__element.push(t),this.count=this.__element.length,this.hasEvent(Event.ADD)&&this.emit(Event.ADD,t),!0}unshift(t){if(this.__only){if(this.__element.indexOf(t)>=0)return!1}return this.__element.unshift(t),this.count=this.__element.length,this.hasEvent(Event.ADD)&&this.emit(Event.ADD,t),!0}pop(){if(this.__element.length>0){const t=this.__element.pop();return this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,t),t}return null}shift(){if(this.__element.length>0){const t=this.__element.shift();return this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,t),t}return null}removeAt(t){if(t>=this.__element.length)throw new Error("删除索引超出范围！");const e=this.__element[t];return this.__element.splice(t,1),this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,e),e}remove(t){let e=this.__element.indexOf(t);if(e<0)throw new Error("要删除的内容不在列表中！"+t);const i=this.__element[e];this.__element.splice(e,1),this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,i)}clear(){this.count=0,this.__element.length=0,this.hasEvent(Event.CLEAR)&&this.emit(Event.CLEAR)}has(t){return this.find(t)>=0}find(t){return this.__element.indexOf(t)}findIndex(t){return this.__element.findIndex(t)}get(t){if(t>=this.__element.length)throw new Error("超出索引范围:"+t+"/"+this.__element.length);return this.__element[t]}get elements(){return this.__element}}class FunctionHookInfo{equal(t,e,i){return this.functionName==t&&(!!e.equal(this.preHandler)&&!!i.equal(this.laterHandler))}}class FunctionHook{constructor(t){this.data=t,this.__functions=[],this.__preHandlerMap=new Map,this.__laterHandlerMap=new Map,this.__groupMap=new Map}addHook(t,e,i,s){let r=this.__groupMap.get(t);r||(r=[],this.__groupMap.set(t,r));for(let t=0;t<r.length;t++){if(r[t].equal(e,i,s))return}let n=new FunctionHookInfo;if(n.functionName=e,n.preHandler=i,n.laterHandler=s,r.push(n),this.__functions.indexOf(e)<0){let t=this.data[e];if(!t)throw new Error("方法不存在！");let i=this.__preHandlerMap.get(e);i||(i=[],this.__preHandlerMap.set(e,i));let s=this.__laterHandlerMap.get(e);s||(s=[],this.__laterHandlerMap.set(e,s));let r=function(...e){if(i&&i.length)for(let t=0;t<i.length;t++){i[t].run(e)}if(t(e),s&&s.length)for(let t=0;t<s.length;t++){s[t].run(e)}};this.data[e]=r,this.data["old_"+e]=t,this.__functions.push(e)}let a=this.__preHandlerMap.get(e);a||(a=[],this.__preHandlerMap.set(e,a)),a.indexOf(i)<0&&a.push(i);let h=this.__laterHandlerMap.get(e);h||(h=[],this.__laterHandlerMap.set(e,h)),h.indexOf(s)<0&&h.push(s)}removeHook(t,e,i,s){let r,n,a=this.__groupMap.get(t);if(a){if(!e){for(let t=0;t<a.length;t++){const e=a[t];e.preHandler&&(r=this.__preHandlerMap.get(e.functionName),n=r.indexOf(e.preHandler),n>=0&&r.splice(n,1),0==r.length&&this.__preHandlerMap.delete(e.functionName)),e.laterHandler&&(r=this.__laterHandlerMap.get(e.functionName),n=r.indexOf(e.laterHandler),n>=0&&r.splice(n,1),0==r.length&&this.__laterHandlerMap.delete(e.functionName))}return a.length=0,void this.__groupMap.delete(t)}for(let t=0;t<a.length;t++){const h=a[t];if(h.equal(e,i,s))return a.splice(t,1),h.preHandler&&(r=this.__preHandlerMap.get(e),n=r.indexOf(h.preHandler),n>=0&&r.splice(n,1)),void(h.laterHandler&&(r=this.__laterHandlerMap.get(e),n=r.indexOf(h.laterHandler),n>=0&&r.splice(n,1)))}}}}class TickerManagerImpl{constructor(){this.__tickerRoot=find("TickerManager"),this.__tickerRoot||(this.__tickerRoot=new Node("TickerManager"),director.getScene().addChild(this.__tickerRoot)),this.__tickerManager=this.__tickerRoot.addComponent(TickManagerComponent)}addTicker(t){this.__tickerManager.addTicker(t)}removeTicker(t){this.__tickerManager.removeTicker(t)}callNextFrame(t,e){this.__tickerManager.callNextFrame(t,e)}clearNextFrame(t,e){this.__tickerManager.clearNextFrame(t,e)}}class TickManagerComponent extends Component$1{constructor(){super(...arguments),this.__tickerList=[],this.__nextFrameCallBacks=[]}update(t){let e;for(;this.__nextFrameCallBacks.length;)e=this.__nextFrameCallBacks.shift(),e.callBack.apply(e.caller);for(let e=0;e<this.__tickerList.length;e++){this.__tickerList[e].tick(t)}}addTicker(t){if(this.__tickerList.indexOf(t)>=0)throw new Error("Ticker 重复添加！");this.__tickerList.push(t)}removeTicker(t){let e=this.__tickerList.indexOf(t);if(e<0)throw new Error("找不到要删除的Tick！");this.__tickerList.splice(e,1)}callNextFrame(t,e){for(let i=0;i<this.__nextFrameCallBacks.length;i++){if(this.__nextFrameCallBacks[i].equal(t,e))return}this.__nextFrameCallBacks.push(new NextFrameHandler(t,e))}clearNextFrame(t,e){for(let i=0;i<this.__nextFrameCallBacks.length;i++){this.__nextFrameCallBacks[i].equal(t,e)&&this.__nextFrameCallBacks.splice(i,1)}}}class NextFrameHandler{constructor(t,e){this.callBack=t,this.caller=e}equal(t,e){return this.caller===e&&this.callBack===t}}class TickerManager{static addTicker(t){this.impl.addTicker(t)}static removeTicker(t){this.impl.removeTicker(t)}static callNextFrame(t,e){this.impl.callNextFrame(t,e)}static clearNextFrame(t,e){this.impl.clearNextFrame(t,e)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new TickerManagerImpl),this.__impl}}TickerManager.KEY="TickerManager";class BindInfo{constructor(t,e,i){this.property=t,this.targetOrCallBack=e,this.tPropertyOrCaller=i}equal(t,e,i){return t==this.property&&this.targetOrCallBack==e&&this.tPropertyOrCaller==i}}class PropertyBinder{constructor(t){this.data=t,this.__propertys=[],this.__changedPropertys=[],this.__bindedMap=new Map,this.__bindedGroupMap=new Map}bind(t,e,i,s){let r,n=this.__bindedGroupMap.get(t);n||(n=[],this.__bindedGroupMap.set(t,n));let a,h=!1;if(Array.isArray(e))for(let t=0;t<e.length;t++){const o=e[t];this.__checkProperty(o);for(let t=0;t<n.length;t++)r=n[t],r.equal(o,i,s)&&(h=!0);h||(r=new BindInfo(o,i,s),a=this.__bindedMap.get(o),a||(a=[],this.__bindedMap.set(o,a)),a.push(r),n.push(r),this.__propertyChanged(o))}else{this.__checkProperty(e);for(let t=0;t<n.length;t++)if(r=n[t],r.equal(e,i,s))return;r=new BindInfo(e,i,s),a=this.__bindedMap.get(e),a||(a=[],this.__bindedMap.set(e,a)),a.push(r),n.push(r),this.__propertyChanged(e)}}unbind(t,e,i,s){let r,n,a,h=this.__bindedGroupMap.get(t);if(h){if(null==e){for(let t=0;t<h.length;t++)r=h[t],n=this.__bindedMap.get(r.property),n&&n.length>0&&(a=n.indexOf(r),a>=0&&n.splice(a,1)),0==n.length&&this.__bindedMap.delete(r.property);return h.length=0,void this.__bindedGroupMap.delete(t)}if(Array.isArray(e)){for(let t=0;t<e.length;t++){const o=e[t];for(let t=0;t<h.length;t++)r=h[t],n=this.__bindedMap.get(r.property),r.equal(o,i,s)&&(a=n.indexOf(r),a>=0&&n.splice(a,1),h.splice(t,1),t--)}0==h.length&&this.__bindedGroupMap.delete(t)}else{for(let t=0;t<h.length;t++)r=h[t],n=this.__bindedMap.get(r.property),r.equal(e,i,s)&&(a=n.indexOf(r),a>=0&&n.splice(a,1),h.splice(t,1),t--);0==h.length&&this.__bindedGroupMap.delete(t)}}}__checkProperty(t){if(this.__propertys.indexOf(t)<0){let e=this.data[t];this.__defineReactive(this.data,t,e),this.__propertys.push(t)}}__defineReactive(t,e,i){let s=this;Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){return i},set:function(t){i!=t&&(i=t,s.__propertyChanged(e))}})}__propertyChanged(t,e=!1){this.__changedPropertys.indexOf(t)<0&&(this.__changedPropertys.push(t),TickerManager.callNextFrame(this.__nextFramePropertyUpdate,this))}__nextFramePropertyUpdate(t=!1){let e;for(let t=0;t<this.__changedPropertys.length;t++)e=this.__changedPropertys[t],this.__updateProperty(e);this.__changedPropertys.length=0}__updateProperty(t){let e,i=this.__bindedMap.get(t);if(i&&i.length)for(let s=0;s<i.length;s++)e=i[s],"function"!=typeof e.targetOrCallBack?e.targetOrCallBack[e.tPropertyOrCaller]=this.data[t]:e.targetOrCallBack.apply(e.tPropertyOrCaller,this.__changedPropertys)}}class BinderUtils{constructor(){}static bind(t,e,i,s,r){let n=e.$PropertyBinder;n||(n=new PropertyBinder(e),e.$PropertyBinder=n),n.bind(t,i,s,r)}static unbind(t,e,i,s,r){let n=e.$PropertyBinder;n&&n.unbind(t,i,s,r)}static addHook(t,e,i,s,r){let n=e.$FunctionHook;n||(n=new FunctionHook(e),e.$FunctionHook=n),n.addHook(t,i,s,r)}static removeHook(t,e,i,s,r){let n=e.$FunctionHook;n&&n.removeHook(t,i,s,r)}}class BindingUtils{constructor(){this.__bindRecords=[],this.__hookRecords=[]}__bind(t,e,i,s){for(let r=0;r<this.__bindRecords.length;r++){const n=this.__bindRecords[r];if(n.source==t&&n.property==e&&n.targetOrCallback==i&&n.targetPropertyOrCaller==s)throw new Error("重复绑定："+t+e+i+s)}this.__bindRecords.push({source:t,property:e,targetOrCallback:i,targetPropertyOrCaller:s}),BinderUtils.bind(this,t,e,i,s)}__unbind(t,e,i,s){for(let r=0;r<this.__bindRecords.length;r++){const n=this.__bindRecords[r];n.source==t&&n.property==e&&n.targetOrCallback==i&&n.targetPropertyOrCaller==s&&this.__bindRecords.splice(r,1)}BinderUtils.unbind(this,t,e,i,s)}__addHook(t,e,i,s){for(let r=0;r<this.__hookRecords.length;r++){const n=this.__hookRecords[r];if(n.source==t&&n.functionName==e&&i.equal(n.preHandler)&&s.equal(n.laterHandler))throw new Error("重复绑定："+t+" "+e)}this.__hookRecords.push({source:t,functionName:e,preHandler:i,laterHandler:s}),BinderUtils.addHook(this,t,e,i,s)}__removeHook(t,e,i,s){for(let r=0;r<this.__hookRecords.length;r++){const n=this.__hookRecords[r];n.source==t&&n.functionName==e&&i.equal(n.preHandler)&&s.equal(n.laterHandler)&&this.__hookRecords.splice(r,1)}BinderUtils.removeHook(this,t,e,i,s)}bindAA(t,e,i,s){this.__bind(t,e,i,s)}unbindAA(t,e,i,s){this.__unbind(t,e,i,s)}bindAM(t,e,i,s){this.__bind(t,e,i,s)}unbidAM(t,e,i,s){this.__unbind(t,e,i,s)}bindMM(t,e,i,s){this.__addHook(t,e,i,s)}unbindMM(t,e,i,s){this.__removeHook(t,e,i,s)}bindByRecords(){for(let t=0;t<this.__bindRecords.length;t++){const e=this.__bindRecords[t];BinderUtils.bind(this,e.source,e.property,e.targetOrCallback,e.targetPropertyOrCaller)}for(let t=0;t<this.__hookRecords.length;t++){const e=this.__hookRecords[t];BinderUtils.addHook(this,e.source,e.functionName,e.preHandler,e.laterHandler)}}unbindByRecords(){for(let t=0;t<this.__bindRecords.length;t++){const e=this.__bindRecords[t];BinderUtils.unbind(this,e.source,e.property,e.targetOrCallback,e.targetPropertyOrCaller)}for(let t=0;t<this.__hookRecords.length;t++){const e=this.__hookRecords[t];BinderUtils.removeHook(this,e.source,e.functionName,e.preHandler,e.laterHandler)}}destroy(){this.__hookRecords&&(this.__hookRecords.length=0,this.__hookRecords=null),this.__bindRecords&&(this.__bindRecords.length=0,this.__bindRecords=null)}}class TimerImpl{constructor(){this.__lastTime=0,this.reset(),TickerManager.addTicker(this)}reset(){this.__lastTime=Date.now()/1e3}tick(t){this.__lastTime+=t}get currentTime(){return this.__lastTime}get absTime(){return this.reset(),this.currentTime}}class Timer{static get currentTime(){return this.impl.currentTime}static get absTime(){return this.impl.absTime}static reset(t){this.impl.reset(t)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new TimerImpl),this.__impl}}Timer.KEY="Timer";class ResManagerImpl{constructor(){this.__resDic=new Dictionary,this._waitDestroy=[],TickerManager.addTicker(this)}tick(t){ResManager.AUTO_GC&&this.gc()}addRes(t){if(this.__resDic.has(t.key))throw new Error("重复添加资源！");this.__resDic.set(t.key,t),this._waitDestroy.push(t),t.lastOpTime=Timer.currentTime}hasRes(t){return this.__resDic.has(t)}_getRes(t){return this.__resDic.get(t)}addResRef(t,e){if(!this.__resDic.has(t))throw new Error("未找到资源："+t);let i=this.__resDic.get(t),s=this._waitDestroy.indexOf(i);return s>=0&&this._waitDestroy.splice(s,1),i.lastOpTime=Timer.currentTime,i.addRef(e)}removeResRef(t){if(!this.__resDic.has(t.key))throw new Error("未找到资源："+t.key);let e=this.__resDic.get(t.key);e.removeRef(t),0==e.refLength&&this._waitDestroy.push(e),e.lastOpTime=Timer.currentTime}gc(t){let e,i=Timer.currentTime;for(let s=0;s<this._waitDestroy.length;s++)e=this._waitDestroy[s],e.refCount>0||(1==t||i-e.lastOpTime>ResManager.GC_TIME)&&(this._waitDestroy.splice(s,1),this.destroyRes(e),s--)}destroyRes(t){this.__resDic.delete(t.key),t.destroy()}get resList(){return this.__resDic.elements}}class ResManager{static addRes(t){this.impl.addRes(t)}static hasRes(t){return this.impl.hasRes(t)}static _getRes(t){return this.impl._getRes(t)}static addResRef(t,e){return this.impl.addResRef(t,e)}static removeResRef(t){return this.impl.removeResRef(t)}static gc(t){return this.impl.gc(t)}static resList(){return this.impl.resList}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new ResManagerImpl),this.__impl}}ResManager.KEY="drongo.ResManager",ResManager.GC_TIME=15,ResManager.AUTO_GC=!0;class ResRef{constructor(){this.key="",this.__isDispose=!1}dispose(){if(this.__isDispose)throw new Error("重复释放资源引用");this.__isDispose=!0,ResManager.removeResRef(this)}get isDispose(){return this.__isDispose}reset(){this.key="",this.refKey=void 0,this.content=null,this.__isDispose=!1}destroy(){this.key="",this.refKey=void 0,this.content=null}}class Resource{constructor(){this.state=0,this.key="",this.lastOpTime=0,this.__refs=[],this.__content=null}reset(){}set content(t){this.__content=t,this.__content instanceof Asset&&this.__content.addRef()}get content(){return this.__content}addRef(t){let e=new ResRef;return e.key=this.key,e.refKey=t,this.content instanceof Asset?(this.content instanceof Prefab?e.content=instantiate(this.content):e.content=this.content,this.content.addRef()):e.content=this.content,this.__refs.push(e),e}removeRef(t){let e=this.__refs.indexOf(t);if(e<0)throw new Error("未找到需要删除的引用！");if(this.content instanceof Asset){if(this.content instanceof Prefab){let e=t.content;isValid(e)&&e.destroy()}this.content.decRef()}this.__refs.splice(e,1),t.destroy()}destroy(){if(this.refCount>0||this.refLength>0)throw new Error("发现销毁资源时引用数量不为0");this.__content instanceof Asset&&(this.__content.decRef(),this.__content.refCount<=0&&(Debuger.log("Res","资源销毁=>"+this.key),assetManager.releaseAsset(this.__content))),this.key="",this.__refs.length=0,this.__content=null}get refCount(){return this.__content instanceof Asset?this.__content.refCount-1:this.__refs.length}get refLength(){return this.__refs.length}}function url2Key(t){return ResURLUtils.url2Key(t)}function key2URL(t){return ResURLUtils.key2Url(t)}function fullURL(t){return"string"==typeof t?t:t.type==Texture2D?t.url+"/texture":t.type==SpriteFrame?t.url+"/spriteFrame":t.url}class ResURLUtils{static getAssetType(t){if(!this.__assetTypes.has(t))throw new Error("未找到对应资源类型："+t);return this.__assetTypes.get(t)}static _getURL(t){let e=t.length,i=e-8,s=t.substring(i);return"/texture"===s?t.substring(0,i):(i=e-12,s=t.substring(i),"/spriteFrame"===s?t.substring(0,i):t)}static key2Url(t){if(t.indexOf("|")){let e=t.split("|");return{url:this._getURL(e[0]),bundle:e[1],type:this.getAssetType(e[2])}}return t}static url2Key(t){return null==t||null==t?"":"string"==typeof t?t:t.type==SpriteFrame?t.url+"/spriteFrame|"+t.bundle+"|"+this.getClassName(t.type):t.type==Texture2D?t.url+"/texture|"+t.bundle+"|"+this.getClassName(t.type):t.url+"|"+t.bundle+"|"+this.getClassName(t.type)}static getClassName(t){let e;if("string"!=typeof t){e=t.toString(),e=e.replace("function ","");let i=e.indexOf("()");if(i<0)throw new Error("获取类型名称错误："+e);e=e.substring(0,i)}else e=t;return this.__assetTypes.has(e)||this.__assetTypes.set(e,t),e}}ResURLUtils.__assetTypes=new Map;var GUIState,__awaiter$2=function(t,e,i,s){return new(i||(i=Promise))((function(r,n){function a(t){try{o(s.next(t))}catch(t){n(t)}}function h(t){try{o(s.throw(t))}catch(t){n(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,h)}o((s=s.apply(t,e||[])).next())}))};class Res{static setResLoader(t,e){this.__loaders.set(t,e)}static getResLoader(t){if(!this.__loaders.has(t))throw new Error("未注册的加载器："+t);return this.__loaders.get(t)}static getResRef(t,e,i){return __awaiter$2(this,void 0,void 0,(function*(){if(Array.isArray(t))throw new Error("获取资源列表请调用getResRefList或getResRefMap");let s=url2Key(t);return ResManager.hasRes(s)?Promise.resolve(ResManager.addResRef(s,e)):yield this.loadAsset(t,e,t=>{i&&i(t)})}))}static getResRefList(t,e,i){return __awaiter$2(this,void 0,void 0,(function*(){let s=[];for(let r=0;r<t.length;r++){const n=t[r],a=yield this.loadAsset(n,e,e=>{i&&i((0+e)/t.length)});s.push(a)}return yield Promise.all(s)}))}static getResRefMap(t,e,i,s){return __awaiter$2(this,void 0,void 0,(function*(){i=i||new Map;let r=yield this.getResRefList(t,e,s);for(let t=0;t<r.length;t++){const e=r[t];i.set(e.key,e)}return Promise.resolve(i)}))}static loadAsset(t,e,i){return __awaiter$2(this,void 0,void 0,(function*(){const s=url2Key(t);if(ResManager.hasRes(s))return Promise.resolve(ResManager.addResRef(s,e));return new Promise((s,r)=>{if("string"==typeof t)throw new Error("未实现！");let n,a=assetManager.getBundle(t.bundle);a?(n="string"==typeof t.type?this.getResLoader(t.type):this.defaultAssetLoader,n(t,a,e,i,(t,e)=>{t?r(t):s(e)})):assetManager.loadBundle(t.bundle,(a,h)=>{a?r(a):(n="string"==typeof t.type?this.getResLoader(t.type):this.defaultAssetLoader,n(t,h,e,i,(t,e)=>{t?r(t):s(e)}))})})}))}static defaultAssetLoader(t,e,i,s,r){if("string"==typeof t)throw new Error("url不能为字符串"+t);if("string"==typeof t.type)throw new Error("url.type不能为字符串"+t);e.load(fullURL(t),t.type,s,(e,s)=>{if(e)return void(r&&r(e));const n=url2Key(t);if(ResManager.hasRes(n))r&&r(void 0,ResManager.addResRef(n,i));else{let t=new Resource;t.key=n,t.content=s,ResManager.addRes(t),r&&r(void 0,ResManager.addResRef(n,i))}})}}Res.__loaders=new Map;class AudioChannel{constructor(t,e){null==e&&(e=t.addComponent(AudioSource)),this.__node=t,this.__source=e}get url(){return this.__url}get mute(){return this.__mute}set mute(t){this.__mute!=t&&(this.__mute=t,this.__mute?(this.__volume=this.__source.volume,this.__source.volume=0):this.__source.volume=this.__volume)}play(t,e,i,s,r=!1,n=1){this.__reset(),this.__url=t,this.__playedComplete=e,this.__isPlaying=!0,this.__speed=n,this.__loop=r,s?(s.time<=0&&(this.mute?this.__volume=i:this.__source.volume=i),null==this.__fadeData&&(this.__fadeData=new FadeData),this.__fadeData.startTime=director.getTotalTime(),this.__fadeData.startValue=null==s.startVolume?this.__source.volume:s.startVolume,this.__fadeData.time=s.time,this.__fadeData.endValue=i,this.__fadeData.complete=s.complete,this.__fadeData.completeStop=s.completeStop):this.__volume=i,this.__startTime=director.getTotalTime(),this.__time=Number.MAX_VALUE,Res.getResRef(this.url,"AudioChannel").then(t=>{if(t instanceof ResRef){if(0==this.__isPlaying)return void t.dispose();if(url2Key(this.url)!=t.key)return void t.dispose();this.__ref=t,this.__play()}},t=>{console.error(t),this.__isPlaying=!1,this.__source.stop()})}stop(){this.__source.playing&&this.__source.stop(),this.__isPlaying=!1,this.__reset()}get isPlaying(){return this.__isPlaying||this.__source.playing}fade(t,e,i,s,r){this.isPlaying&&(this.__paused=!1,t<=0?(this.mute?this.__volume=e:this.__source.volume=e,r&&(this.stop(),s&&s())):(null==this.__fadeData&&(this.__fadeData=new FadeData),this.__fadeData.startTime=director.getTotalTime(),this.__fadeData.startValue=null==i?this.__source.volume:i,this.__fadeData.time=t,this.__fadeData.endValue=e,this.__fadeData.complete=s,this.__fadeData.completeStop=r))}__reset(){this.__url=null,this.__ref&&(this.__ref.dispose(),this.__ref=null),this.__isPlaying=!1,this.__paused=!1,this.__fadeData=null}__clipLoaded(t,e){if(t)return console.error(t.message),this.__isPlaying=!1,void this.__source.stop();if(0==this.__isPlaying)return void e.dispose();url2Key(this.url)==e.key?(this.__ref=e,this.__play()):e.dispose()}__play(){this.__source.clip=this.__ref.content,this.__source.loop=this.__loop,this.__source.play();let t=director.getTotalTime();this.__fadeData?(this.__fadeData.startTime=t,this.mute?this.__volume=this.__fadeData.startValue:this.__source.volume=this.__fadeData.startValue):this.mute?this.__source.volume=0:this.__source.volume=this.__volume,this.__startTime=director.getTotalTime(),this.__time=1e3*this.__source.duration}tick(t){if(this.__paused||0==this.__isPlaying||null==this.__url)return;let e,i=director.getTotalTime();if(this.__fadeData){e=i-this.__fadeData.startTime;let t=e/this.__fadeData.time;if(t=t>1?1:t,this.mute?this.__volume=this.__fadeData.startValue+(this.__fadeData.endValue-this.__fadeData.startValue)*t:this.__source.volume=this.__fadeData.startValue+(this.__fadeData.endValue-this.__fadeData.startValue)*t,1==t){let t=this.__fadeData.complete;this.__fadeData.completeStop&&(this.__source.stop(),this.__isPlaying=!1,this.__reset()),t&&t(),this.__fadeData=null}}this.__loop||(e=i-this.__startTime,e/this.__time>=1&&(this.__source.stop(),this.__isPlaying=!1,this.__playedComplete&&this.__playedComplete(),this.__reset()))}resume(){if(0==this.__paused)return;let t=director.getTotalTime()-this.__pauseTime;this.__fadeData&&(this.__fadeData.startTime+=t),this.__startTime+=t,this.__source.play(),this.__paused=!1}pause(){this.__paused||(this.__paused=!0,this.__pauseTime=director.getTotalTime(),this.__source.pause())}get curVolume(){return this.__source.volume}}class FadeData{}class AudioManagerImpl{constructor(){let t;this.__musicChannelIndex=0,this.__volume=1,this.__musicVolume=1,this.__musicChannels=[],this.__soundChannels=[],TickerManager.addTicker(this),this.__audioRoot=find("AudioManager"),null==this.__audioRoot&&(this.__audioRoot=new Node("AudioManager"),director.getScene().addChild(this.__audioRoot));for(let e=0;e<2;e++)t=new AudioChannel(this.__audioRoot),this.__musicChannels.push(t)}get volume(){return this.__volume}set volume(t){if(this.__volume==t)return;let e,i;this.__volume=t;for(let t=0;t<this.__musicChannels.length;t++)i=this.__musicChannels[t],i.isPlaying&&(e=i.volume*this.__musicVolume*this.__volume,i.fade(100,e,i.curVolume));for(let t=0;t<this.__soundChannels.length;t++)i=this.__soundChannels[t],i.isPlaying&&(e=i.volume*this.__soundVolume*this.__volume,i.fade(100,e,i.curVolume))}set musicVolume(t){if(this.__musicVolume==t)return;if(this.__musicVolume=t,this.muteMusic)return;let e=this.__musicChannels[this.__musicChannelIndex];if(e&&e.isPlaying){let t=e.volume*this.__musicVolume*this.__volume;e.fade(100,t,e.curVolume)}}get musicVolume(){return this.__musicVolume}get soundVolume(){return this.__soundVolume}set soundVolume(t){if(this.__soundVolume==t)return;let e;this.__soundVolume=t;for(let t=0;t<this.__soundChannels.length;t++)if(e=this.__soundChannels[t],e.isPlaying){let t=e.volume*this.__soundVolume*this.__volume;e.fade(100,t,e.curVolume)}}set mute(t){this.__mute!=t&&(this.__mute=t,this.__changedMutes())}get mute(){return this.__mute}get muteMusic(){return this.__muteMusic}set muteMusic(t){this.__muteMusic!=t&&(this.__muteMusic=t,this.__changedMutes())}get muteSound(){return this.__muteSound}set muteSound(t){this.__muteSound!=t&&(this.__muteSound=t,this.__changedMutes())}__changedMutes(){for(let t=0;t<this.__musicChannels.length;t++){this.__musicChannels[t].mute=this.muteMusic||this.mute}for(let t=0;t<this.__soundChannels.length;t++){this.__soundChannels[t].mute=this.muteSound||this.mute}}playMusic(t,e,i,s){let r;r=this.muteMusic||this.mute?0:e*this.__musicVolume*this.__volume;let n,a=this.__musicChannels[this.__musicChannelIndex];a&&a.isPlaying&&url2Key(a.url)==url2Key(t)||(this.__musicChannelIndex++,this.__musicChannelIndex=this.__musicChannelIndex%2,0==this.__musicChannelIndex?(a=this.__musicChannels[0],n=this.__musicChannels[1]):(a=this.__musicChannels[1],n=this.__musicChannels[0]),n.isPlaying&&n.fade(500,0,void 0,null,!0),a.volume=e,a.play(t,null,r,{time:500,startVolume:0},!0,i))}stopMusic(){let t=this.__musicChannels[this.__musicChannelIndex];t&&t.isPlaying&&t.stop()}pauseMusic(){let t=this.__musicChannels[this.__musicChannelIndex];t&&t.pause()}resumeMusic(){let t=this.__musicChannels[this.__musicChannelIndex];t&&t.resume()}playSound(t,e,i,s,r){let n;n=this.muteSound||this.mute?0:this.soundVolume*i*this.__volume;let a=this.getIdleChannel();a&&(a.volume=i,a.play(t,e,n,null,r,s))}getPlaying(t){for(let e=0;e<this.__soundChannels.length;e++){const i=this.__soundChannels[e];if(i.isPlaying&&url2Key(i.url)==url2Key(t))return i}return null}getIdleChannel(){let t,e;for(t=0;t<this.__soundChannels.length;t++)if(e=this.__soundChannels[t],0==e.isPlaying)return e;return t<AudioManager.MAX_SOUND_CHANNEL_COUNT?(e=new AudioChannel(this.__audioRoot),this.__soundChannels.push(e),e):null}tick(t){for(let e=0;e<this.__musicChannels.length;e++){const i=this.__musicChannels[e];i.isPlaying&&i.tick(t)}for(let e=0;e<this.__soundChannels.length;e++){const i=this.__soundChannels[e];i.isPlaying&&i.tick(t)}}}class AudioManager{static get volume(){return this.impl.volume}static set volume(t){this.impl.volume=t}static get musicVolume(){return this.impl.musicVolume}static set musicVolume(t){this.impl.musicVolume=t}static get soundVolume(){return this.impl.soundVolume}static set soundVolume(t){this.impl.soundVolume=t}static get mute(){return this.impl.mute}static set mute(t){this.impl.mute=t}static get muteMusic(){return this.impl.muteMusic}static set muteMusic(t){this.impl.muteMusic=t}static get muteSound(){return this.impl.muteSound}static set muteSound(t){this.impl.muteSound=t}static playMusic(t,e=1,i=1,s=!1){this.impl.playMusic(t,e,i,s)}static stopMusic(){this.impl.stopMusic()}static pauseMusic(){this.impl.pauseMusic()}static resumeMusic(){this.impl.resumeMusic()}static playSound(t,e,i,s,r){this.impl.playSound(t,e,i,s,r)}static getPlaying(t){return this.impl.getPlaying(t)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new AudioManagerImpl),this.__impl}}AudioManager.KEY="drongo.AudioManager",AudioManager.MAX_SOUND_CHANNEL_COUNT=30;class TaskQueue extends EventDispatcher{constructor(){super(),this.__index=0,this.__taskList=[]}addTask(t){if(this.__taskList.indexOf(t)>=0)throw new Error("重复添加！");this.__taskList.push(t)}removeTask(t){let e=this.__taskList.indexOf(t);if(e<0)throw new Error("未找到要删除的内容！");this.__taskList.splice(e,1)}start(t){this.__index=0,this.__tryNext()}__tryNext(){if(this.__index<this.__taskList.length){let t=this.__taskList[this.__index];t.on(Event.COMPLETE,this.__subTaskEventHandler,this),t.on(Event.PROGRESS,this.__subTaskEventHandler,this),t.on(Event.ERROR,this.__subTaskEventHandler,this),t.start()}else this.emit(Event.COMPLETE)}__subTaskEventHandler(t,e,i){if(t!=Event.PROGRESS)e.offAllEvent(),t!=Event.ERROR?(e.destroy(),this.__index++,this.__tryNext()):this.emit(Event.ERROR,i);else{let t=null==Number(i)?0:Number(i),e=(this.__index+t)/this.__taskList.length;this.emit(Event.PROGRESS,e)}}destroy(){super.destroy(),this.__taskList.length=0,this.__index=0}}class TaskSequence extends EventDispatcher{constructor(){super(),this.__taskList=new Array,this.__index=0}addTask(t){if(this.__taskList.indexOf(t)>=0)throw new Error("重复添加！");this.__taskList.push(t)}removeTask(t){let e=this.__taskList.indexOf(t);if(e<0)throw new Error("找不到要删除的内容!");this.__taskList.splice(e,1)}start(t){for(let t=0;t<this.__taskList.length;t++){const e=this.__taskList[t];e.on(Event.COMPLETE,this.__subTaskEventHandler,this),e.on(Event.ERROR,this.__subTaskEventHandler,this),e.on(Event.PROGRESS,this.__subTaskEventHandler,this),e.start()}}__subTaskEventHandler(t,e,i){t!=Event.PROGRESS?(e.offAllEvent(),t!=Event.ERROR?(this.__index++,this.__index<this.__taskList.length||(e.destroy(),this.emit(Event.COMPLETE))):this.emit(Event.ERROR,i)):this.emit(Event.PROGRESS,this.__index/this.__taskList.length)}destroy(){super.destroy(),this.__taskList.length=0,this.__index=0}}class Matcher extends BitFlag{constructor(t){super();for(let e=0;e<t.length;e++)this.add(t[e])}}class MatcherAllOf extends Matcher{}class MatcherAnyOf extends Matcher{}class MatcherNoneOf extends Matcher{}class Component{get type(){return 0}dispose(){}}class Entity{constructor(t,e){this.__id=t,this.__world=e,this.__components=new Dictionary,this.__componentFlags=new BitFlag}addComponent(t){let e=this.__components.get(t.type);if(e){if(e.indexOf(t)>=0)throw new Error("重复添加Component到Entity")}else e=[],this.__components.set(t.type,e);let i=!0;return t.entity&&(t.entity.__removeComponent(t,!1),i=!1),t.entity=this,e.push(t),this.__componentFlags.add(t.type),i&&this.__world._addComponent(t),t}removeComponent(t){this.__removeComponent(t,!0)}getComponent(t){let e=this.__components.get(t);return e&&e.length>0?e[0]:null}getComponents(t){return this.__components.get(t)}__removeComponent(t,e){let i=this.__components.get(t.type);if(null==i&&0==i.length)throw new Error("该组件不是属于Entity:"+this.__id);let s=i.indexOf(t);if(s<0)throw new Error("该组件不是属于Entity:"+this.__id);this.__componentFlags.remove(t.type),e&&this.__world._removeComponent(t),i.splice(s,1),t.entity=null}get id(){return this.__id}dispose(){let t,e,i=this.__components.elements;for(let s=0;s<i.length;s++){t=i[s];for(let i=0;i<t.length;i++)e=t[i],this.__world._removeComponent(e)}this.__world._removeEntity(this),this.__components=null,this.__world=null,this.__componentFlags.destroy(),this.__componentFlags=null}_matcherGroup(t){let e=!1;t.matcher instanceof MatcherAllOf?this.__componentFlags.has(t.matcher.flags)&&(e=!0):this.__componentFlags.flags&t.matcher.flags&&(e=!0);let i=!0;return t.matcherNoneOf&&this.__componentFlags.flags&t.matcherNoneOf.flags&&(i=!1),e&&i}}class Group{constructor(){this._entitys=new Dictionary}init(t,e){this.matcher=t,this.matcherNoneOf=e,this.__id=e?"id:"+this.matcher.flags+"|"+e.flags:"id:"+this.matcher.flags}get id(){return this.__id}static create(t,e){let i;return i=this.__pool.length?this.__pool.shift():new Group,i.init(t,e),i}static recycle(t){if(this.__pool.indexOf(t)>=0)throw new Error("重复回收!");this.__pool.push(t)}}Group.__pool=[];class System{constructor(t,e){this._group=Group.create(t,e)}tick(t){}}class World{constructor(){this.__components=new Dictionary,this.__entitys=new Dictionary,this.__systems=[]}tick(t){for(var e of this.__systems)e.tick(t)}createEntity(t){let e=new Entity(t,this);return this.__entitys.set(e.id,e),e}getEntity(t){return this.__entitys.get(t)}addSystem(t){if(this.__systems.indexOf(t)>=0)throw new Error("重复添加系统");this.__systems.push(t),this._matcherGroup(t._group)}removeSystem(t){let e=this.__systems.indexOf(t);if(e<0)throw new Error("找不到要删除的系统");this.__systems.splice(e,1),Group.recycle(t._group)}getComponent(t){return this.__components.get(t)}_matcherGroup(t){for(let e=0;e<t.matcher.elements.length;e++)t.matcher.elements[e]}_addComponent(t){let e=this.__components.get(t.type);if(null==e&&(e=[],this.__components.set(t.type,e)),e.indexOf(t)>=0)throw new Error("重复添加组件！");e.push(t);for(let e=0;e<this.__systems.length;e++){const i=this.__systems[e];i._group._entitys.has(t.entity.id)||t.entity._matcherGroup(i._group)&&i._group._entitys.set(t.entity.id,t.entity)}}_removeComponent(t){let e=this.__components.get(t.type);if(null==e)return;let i=e.indexOf(t);if(i<0)throw new Error("找不到要删除的组件");e.splice(i,0);for(let e=0;e<this.__systems.length;e++){const i=this.__systems[e];i._group._entitys.has(t.entity.id)&&i._group._entitys.delete(t.entity.id)}}_removeEntity(t){if(!this.__entitys.has(t.id))throw new Error("找不到要删除的entity:"+t.id);this.__entitys.delete(t.id)}}class FSM extends EventDispatcher{constructor(t,e){super(),this.owner=t,this.__name=e,this.__states=new Map}tick(t){this.__current&&this.__current.tick(t)}addState(t,e){this.__states.set(t,e),e.init(this)}switchState(t,e){if(this.__state==t)return;let i=this.__state,s=this.__current;if(s&&(this.debug&&Debuger.log("FSM",this.__name+" 所属:"+this.owner.name+" 退出状态==>"+this.__current.name),s.exit()),this.__current=null,!this.__states.has(t))throw new Error("状态机:"+this.__name+" 所属:"+this.owner.name+"未找到状态==>"+t);this.__state=t,this.__current=this.__states.get(t),this.debug&&Debuger.log("FSM",this.__name+" 所属:"+this.owner.name+" 进入状态==>"+this.__current.name),this.__current.enter(e),this.emit(Event.State_Changed,i)}get state(){return this.__state}get current(){return this.__current}destroy(){this.__current&&this.__current.exit(),this.__states.forEach(t=>{t.destroy()}),this.__states.clear()}}class LayerManager{static addLayer(t,e){this.impl.addLayer(t,e)}static removeLayer(t){this.impl.removeLayer(t)}static getLayer(t){return this.impl.getLayer(t)}static getAllLayer(){return this.impl.getAllLayer()}static get impl(){if(null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl)throw new Error(this.KEY+"未注入！");return this.__impl}}LayerManager.KEY="drongo.LayerManager",function(t){t[t.Null=0]="Null",t[t.Showing=1]="Showing",t[t.Showed=2]="Showed",t[t.Closeing=3]="Closeing",t[t.Closed=4]="Closed"}(GUIState||(GUIState={}));class GUIManager{static register(t){return this.impl.register(t)}static unregister(t){return this.impl.unregister(t)}static open(t,e){this.impl.open(t,e)}static close(t,e=!0){this.impl.close(t,e)}static closeAll(){this.impl.closeAll()}static getGUIState(t){return this.impl.getGUIState(t)}static isOpen(t){return this.impl.isOpen(t)}static getUIComponent(t,e){return this.impl.getUIComponent(t,e)}static getMediatorByKey(t){return this.impl.getMediatorByKey(t)}static getPrevLayer(){return this.impl.getPrevLayer()}static get impl(){if(null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl)throw new Error("未注入："+GUIManager.KEY);return this.__impl}}GUIManager.KEY="drongo.GUIManager",GUIManager.GUI_GC_INTERVAL=30;class RelationManager{constructor(){}static addRelation(t,e){if(DEBUG&&this.__checkValidity(t,e),this.__map.has(t))throw new Error("重复注册！");this.__map.set(t,e)}static removeRelation(t){if(!this.__map.has(t))throw new Error("找不到要删除的内容！");this.__map.delete(t)}static __checkValidity(t,e){let i,s=t,r=e.show,n=e.hide;if(i=r.show.indexOf(s),i>=0)throw new Error("GuiRelation.config配置错误：gui:"+s+" show.show:中不能包含自身！");if(i=r.hide.indexOf(s),i>=0)throw new Error("GuiRelation.config配置错误：gui:"+s+" show.hide:中不能包含自身！");if(i=n.show.indexOf(s),i>=0)throw new Error("GuiRelation.config配置错误：gui:"+s+" hide.show:中不能包含自身！");if(i=n.hide.indexOf(s),i>=0)throw new Error("GuiRelation.config配置错误：gui:"+s+" hide.hide:中不能包含自身！");for(let t=0;t<r.show.length;t++){const e=r.show[t];if(r.hide.indexOf(e)>=0)throw new Error("GuiRelation.config配置错误：gui:"+s+" show.show和show.hide中包含相同的guikey:"+e)}for(let t=0;t<n.show.length;t++){const e=n.show[t];if(n.hide.indexOf(e)>=0)throw new Error("GuiRelation.config配置错误：gui:"+s+" hide.show和hide.hide中包含相同的guikey:"+e)}}static getRelation(t){return this.__map.get(t)}}RelationManager.__map=new Map;class LoadingView{static show(){this.impl&&this.impl.show()}static hide(){this.impl&&this.impl.hide()}static changeData(t){this.impl&&this.impl.changeData(t)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&console.warn(this.KEY+"未注入"),this.__impl}}LoadingView.KEY="drongo.LoadingView";class BaseService{constructor(){}init(t){this.__initCallback=t,null==this.$configs||this.$configs.length<=0?this.__configLoaded():this.__loadConfigs()}__loadConfigs(){ConfigManager.load(this.$configs,this.__configLoaded.bind(this))}__configLoaded(t){if(t)throw new Error("配置加载错误："+t.message);null==this.$assets||this.$assets.length<=0?this.$configAndAssetReady():this.__loadAssets()}__loadAssets(){Res.getResRefList(this.$assets,this.name).then(t=>{this.$assetRefs=t,this.$configAndAssetReady()},t=>{throw new Error(this.name+"依赖资源加载出错:"+t)})}$configAndAssetReady(){}$initComplete(){this.__initCallback&&(this.__initCallback(null,this),this.__initCallback=null)}destroy(){this.name=void 0,this.$configs=null,this.__initCallback=null}}var __awaiter$1=function(t,e,i,s){return new(i||(i=Promise))((function(r,n){function a(t){try{o(s.next(t))}catch(t){n(t)}}function h(t){try{o(s.throw(t))}catch(t){n(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,h)}o((s=s.apply(t,e||[])).next())}))};class ServiceStarter{constructor(t,e){this.__name=t,this.__serviceClass=e}start(){return __awaiter$1(this,void 0,void 0,(function*(){return this.__result||(this.__result=new Promise((t,e)=>{let i=new this.__serviceClass;i.name=this.__name,i.init((i,s)=>{i?e(i):t(s)})})),this.__result}))}destroy(){this.__name=void 0,this.__serviceClass=void 0,this.__result=void 0}}var __awaiter=function(t,e,i,s){return new(i||(i=Promise))((function(r,n){function a(t){try{o(s.next(t))}catch(t){n(t)}}function h(t){try{o(s.throw(t))}catch(t){n(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,h)}o((s=s.apply(t,e||[])).next())}))};class ServiceManager{constructor(){this.__registered=new Map,this.__starters=new Map}register(t,e){if(this.__registered.has(t))throw new Error("重复注册服务："+t);this.__registered.set(t,e)}getService(t){return __awaiter(this,void 0,void 0,(function*(){if(!this.__registered.has(t))throw new Error("未注册服务："+t);if(this.__starters.has(t))return this.__starters.get(t).start();let e=new ServiceStarter(t,this.__registered.get(t));return this.__starters.set(t,e),e.start()}))}uninstall(t){if(!this.__starters.has(t))return;this.__starters.get(t).destroy(),this.__starters.delete(t)}}var serviceManager=new ServiceManager;class BaseConfigAccessor{constructor(){}save(t){if(this.__configs.indexOf(t)>=0)return!1;this.__configs.push(t)}get(){return this.__configs}}class ConfigUtils{static parseConfig(t,e,i){let s,r,n={};for(let a=0;a<e.length;a++)switch(s=t[a],r=e[a],r){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:this.__readNumber(s,r,n,i);break;case 8:n[s]=i.readUTF();break;case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:this.__readArray(s,r,n,i)}return n}static __readNumber(t,e,i,s){switch(e){case 0:i[t]=s.readByte();break;case 1:i[t]=s.readUnsignedByte();break;case 2:i[t]=s.readShort();break;case 3:i[t]=s.readUnsignedShort();break;case 4:i[t]=s.readInt();break;case 5:i[t]=s.readUnsignedInt();break;case 6:i[t]=s.readFloat();break;case 7:i[t]=s.readDouble();break;default:throw new Error(t+" 未知类型:"+e)}}static __readArray(t,e,i,s){let r=s.readUnsignedInt(),n=[];for(let i=0;i<r;i++)switch(e){case 9:n.push(s.readByte());break;case 10:n.push(s.readUnsignedByte());break;case 11:n.push(s.readShort());break;case 12:n.push(s.readUnsignedShort());break;case 13:n.push(s.readInt());break;case 14:n.push(s.readUnsignedInt());break;case 15:n.push(s.readFloat());break;case 16:n.push(s.readDouble());break;case 17:n.push(s.readUTF());break;default:throw new Error(t+" 未知类型:"+e)}i[t]=n}}class ConfigManagerImpl{constructor(){this.__accessors=new Map,this.__loaded=new Map}load(t,e){if(Array.isArray(t)){let i=0,s=t.length;for(let r=0;r<t.length;r++){const n=t[r];this.__load(n,t=>{i++,i>=s&&e&&e(t)})}}else this.__load(t,e)}__load(t,e){if(this.__loaded.has(t))return void(e&&e());if(!ConfigManager.configPath)throw new Error("ConfigManager.configPath函数未设置！");let i=ConfigManager.configPath(t);Res.getResRef(i,"ConfigManagerImpl").then(i=>{if(!this.__loaded.has(t)){let e=i.content._buffer;this.__parseConfig(t,e),this.__loaded.set(t,!0),i.dispose()}e&&e()},t=>{e&&e(t)})}__parseConfig(t,e){let i=new ByteArray(e),s=i.readUnsignedInt(),r=[];for(let t=0;t<s;t++)r.push(i.readUTF());let n,a,h=[];s=i.readUnsignedInt();for(let t=0;t<s;t++)h.push(i.readByte());s=i.readUnsignedInt();for(let e=0;e<s;e++)n=ConfigUtils.parseConfig(r,h,i),a=this.__accessors.get(t),a?a.save(n):console.warn("配置表："+t+"未注册存取器！")}register(t,e){this.__accessors.set(t,e)}getAccessor(t){if(!this.__accessors.has(t))throw new Error("配置表："+t+"未注册存取器");return this.__accessors.get(t)}}class ConfigManager{static set configPath(t){this.__configPath=t}static get configPath(){return null==this.__configPath?this.defaultConfigPath:this.__configPath}static defaultConfigPath(t){return{url:"configs/"+t,bundle:"Res",type:BufferAsset}}static register(t,e){this.impl.register(t,e)}static load(t,e){this.impl.load(t,e)}static getAccessor(t){return this.impl.getAccessor(t)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new ConfigManagerImpl),this.__impl}}ConfigManager.KEY="drongo.ConfigManager";export{AudioChannel,AudioManager,BaseConfigAccessor,BaseService,BinderUtils,BindingUtils,BitFlag,ByteArray,Component,ConfigManager,Debuger,Dictionary,Entity,Event,EventDispatcher,FSM,FindPosition,FunctionHook,GUIManager,GUIState,Group,Handler,Injector,LayerManager,List,LoadingView,LocalStorage,Matcher,MatcherAllOf,MatcherAnyOf,MatcherNoneOf,MaxRectBinPack,Pool,PropertyBinder,RGBA8888Texture,Rect,RelationManager,Res,ResManager,ResRef,Resource,ServiceManager,ServiceStarter,StringUtils,System,TaskQueue,TaskSequence,TickerManager,Timer,World,fullURL,key2URL,serviceManager,url2Key};