import{sys,Texture2D,gfx,find,Node,director,Component as Component$1,SpriteFrame,AudioSource,Asset,Prefab,instantiate,isValid,assetManager}from"cc";import{DEBUG}from"cc/env";class Injector{static inject(t,e){e instanceof Function?this.__injectedMap.set(t,e):this.__instanceMap.set(t,e)}static getInject(t){let e=this.__instanceMap.get(t);if(e)return e;let s=this.__injectedMap.get(t);return void 0===s?null:(e=new s,this.__instanceMap.set(t,e),e)}}Injector.__injectedMap=new Map,Injector.__instanceMap=new Map;class EventDispatcher{constructor(){this.callerMap=new Map,this.keyMap=new Map}on(t,e,s,i=0){let r,n;if(this.keyMap.has(t)){r=this.keyMap.get(t);for(const i of r)if(i.target==s&&i.handler==e)return void console.error("重复添加同一个事件监听："+t+" "+s+" "+e)}else r=[],this.keyMap.set(t,r);if(n=new EventInfo(t,s,e),r.push(n),r.sort((t,e)=>t.priority-i),this.callerMap.has(s)){r=this.callerMap.get(s);for(const i of r)i.key==t&&i.handler==e&&console.error("事件系统 处理器关联错误："+t+" "+s+" "+e)}else r=[],this.callerMap.set(s,r);r.push(n)}off(t,e,s){if(0==this.keyMap.has(t))return;let i,r=this.keyMap.get(t),n=null;for(let t=0;t<r.length;t++)if(i=r[t],i.target==s&&i.handler==e){n=i,r.splice(t,1);break}if(this.callerMap.has(s)){r=this.callerMap.get(s);for(let s=0;s<r.length;s++)if(i=r[s],i.key==t&&i.handler==e){n=i,r.splice(s,1);break}}n&&n.destroy()}offByCaller(t){let e,s=this.callerMap.get(t);if(void 0!==s&&0!=s.length){for(;s.length;)e=s[0],this.off(e.key,e.handler,e.target);this.callerMap.delete(t)}}offAllEvent(){this.keyMap.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.keyMap.clear(),this.callerMap.clear()}emit(t,e){if(0==this.keyMap.has(t))return;let s,i=this.keyMap.get(t);for(let r=0;r<i.length;r++)s=i[r],s.handler.apply(s.target,[t,this,e])}hasEvent(t){return this.keyMap.has(t)}hasEventHandler(t,e,s){if(0==this.keyMap.has(t))return!1;let i,r=this.keyMap.get(t);for(let t=0;t<r.length;t++)if(i=r[t],i.target==s&&i.handler==e)return!0;return!1}destroy(){this.callerMap.clear(),this.keyMap.clear()}}class EventInfo{constructor(t,e,s){this.key="",this.priority=255,this.key=t,this.target=e,this.handler=s}destroy(){}}class Event{static getChannel(t="main"){return this.channels.get(t)}static emit(t,e,s="main"){if(!this.channels.has(s))return;this.channels.get(s).emit(t,e)}static on(t,e,s,i=0,r="main"){let n;this.channels.has(r)?n=this.channels.get(r):(n=new EventDispatcher,this.channels.set(r,n)),n.on(t,e,s,i)}static off(t,e,s,i="main"){let r;this.channels.has(i)&&(r=this.channels.get(i),r.off(t,e,s))}static offByCaller(t,e="main"){let s;this.channels.has(e)&&(s=this.channels.get(e),s.offByCaller(t))}static offAll(t="main"){let e;this.channels.has(t)&&(e=this.channels.get(t),e.offAllEvent())}}Event.START="start",Event.PROGRESS="progress",Event.COMPLETE="complete",Event.ERROR="error",Event.SHOW="show",Event.HIDE="hide",Event.ADD="add",Event.REMOVE="remove",Event.UPDATE="update",Event.CLEAR="clear",Event.State_Changed="stateChanged",Event.channels=new Map;class Dictionary extends EventDispatcher{constructor(){super(),this.__map=new Map,this.__list=[]}set(t,e){let s;if(this.__map.has(t)){s=this.__map.get(t);const e=this.__list.indexOf(s);if(e<0)throw new Error("Dictionary内部逻辑错误！");this.__map.delete(t),this.__list.splice(e,1),this.emit(Event.REMOVE,s)}this.__map.set(t,e),this.__list.push(e),this.emit(Event.ADD,e)}has(t){return this.__map.has(t)}get(t){return this.__map.get(t)}getValue(t){if(t>=this.__list.length)throw new Error(t+"索引超出0-"+this.__list.length+"范围");return this.__list[t]}delete(t){if(!this.__map.has(t))return;const e=this.__map.get(t),s=this.__list.indexOf(e);if(s<0)throw new Error("Dictionary内部逻辑错误！");return this.__list.splice(s,1),this.__map.delete(t),this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,e),e}clear(){this.__map.clear(),this.__list.length=0}get elements(){return this.__list}get size(){return this.__map.size}destroy(){super.destroy(),this.__map.clear(),this.__map=null,this.__list=null}}class Debuger{static debug(t,e){this.__debuger.set(t,e)}static getLogs(t){return null!=t&&null!=t||(t="all"),this.__logs.has(t)?this.__logs.get(t):null}static __save(t,e,s){let i;this.__logs.has(t)?i=this.__logs.get(t):(i=[],this.__logs.set(t,i));let r="["+t+"]"+e+":"+s;return i.length>=this.MaxCount&&i.unshift(),i.push(r),this.__logs.has("all")?i=this.__logs.get("all"):(i=[],this.__logs.set("all",i)),i.length>=this.MaxCount&&i.unshift(),i.push(r),r}static log(t,e){let s=this.__save(t,"Log",e),i=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(i||r)&&console.log(s)}static err(t,e){let s=this.__save(t,"Error",e),i=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(i||r)&&console.error(s)}static warn(t,e){let s=this.__save(t,"Warn",e),i=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(i||r)&&console.warn(s)}static info(t,e){let s=this.__save(t,"Info",e),i=!!this.__debuger.has("all")&&this.__debuger.get("all"),r=!!this.__debuger.has(t)&&this.__debuger.get(t);(i||r)&&console.info(s)}}Debuger.MaxCount=1e3,Debuger.__logs=new Dictionary,Debuger.__debuger=new Map;class Pool{constructor(t,e){if(this.__cacheStack=new Array,this.__usingArray=new Array,this.__maxCount=0,this.__class=t,!this.__class)throw new Error("构造函数不能为空！");this.__maxCount=null==e?Number.MAX_SAFE_INTEGER:e}get count(){return this.__cacheStack.length}get usingCount(){return this.__usingArray.length}allocate(){if(this.count+this.usingCount<this.__maxCount){let t=this.__cacheStack.length>0?this.__cacheStack.pop():new this.__class;return this.__usingArray.push(t),t}throw new Error("对象池最大数量超出："+this.__maxCount)}recycle(t){if(this.__cacheStack.indexOf(t)>-1)throw new Error("重复回收！");let e=this.__usingArray.indexOf(t);if(e<0)throw new Error("对象不属于改对象池！");t.reset(),this.__usingArray.splice(e,1),this.__cacheStack.push(t)}recycleList(t){for(let e=0;e<t.length;e++){const s=t[e];this.recycle(s)}}recycleAll(){for(let t=0;t<this.__usingArray.length;t++){const e=this.__usingArray[t];this.recycle(e)}}destroy(){this.recycleAll();for(let t=0;t<this.__cacheStack.length;t++){this.__cacheStack[t].destroy()}this.__cacheStack.length=0,this.__cacheStack=null,this.__usingArray.length=0,this.__usingArray=null}}class BitFlag{constructor(){this.__flags=0,this.__elements=[]}add(t){this.__flags|=t,this.__elements.indexOf(t)<0&&this.__elements.push(t)}remove(t){this.__flags^=t;let e=this.__elements.indexOf(t);e>=0&&this.__elements.splice(e,1)}has(t){return(this.__flags&t)==t}get flags(){return this.__flags}get elements(){return this.__elements}destroy(){this.__flags=0,this.__elements.length=0,this.__elements=null}}class LocalStorage{static init(t){this.__gameName=t;let e=sys.localStorage.getItem(this.__gameName);this.data=e?JSON.parse(e):{}}static getItem(t){return this.data[t]}static setItem(t,e){this.data[t]=e}static clearItem(t){delete this.data[t]}static clearAll(){this.data={}}static save(){let t=JSON.stringify(this.data);sys.localStorage.setItem(this.__gameName,t)}}class StringUtils{static isEmpty(t){return null==t||null==t||0==t.length}static substitute(t,...e){if(null==t)return"";var s,i=e.length;1==i&&e[0]instanceof Array?i=(s=e[0]).length:s=e;for(var r=0;r<i;r++)t=t.replace(new RegExp("\\{"+r+"\\}","g"),s[r]);return t}static replaceAll(t,e,s){return t.split(e).join(s)}static splitString(t,e,s){let i=new Array;return t.split(e).forEach((t,e)=>{let r=t.split(s);i.push(r)}),i}static getFileSuffix(t){let e=t.lastIndexOf(".");if(e<0)throw new Error(t+"没有后缀！！！");return t.substring(e+1)}static replaceSuffix(t,e){let s=t.lastIndexOf(".");if(s<0)throw new Error(t+"没有后缀！！！");let i=t.substring(s+1);return t.replace(i,e)}}var FindPosition;!function(t){t[t.ShortSideFit=0]="ShortSideFit",t[t.BottomLeft=1]="BottomLeft",t[t.ContactPoint=2]="ContactPoint",t[t.LongSideFit=3]="LongSideFit",t[t.AreaFit=4]="AreaFit"}(FindPosition||(FindPosition={}));class MaxRectBinPack{constructor(t,e,s){this.freeRects=[],this.usedRects=[],this.containerHeight=e,this.containerWidth=t,this.allowRotate=!0===s;const i=new Rect;i.x=0,i.y=0,i.width=t,i.height=e,this.freeRects.push(i)}insert(t,e,s){if(t<=0||e<=0)throw new Error(`width & height should greater than 0, but got width as ${t}, height as ${e}`);(s<=FindPosition.ShortSideFit||s>=FindPosition.AreaFit)&&(s=FindPosition.ShortSideFit);let i=new Rect;const r={value:0},n={value:0};switch(s){case FindPosition.ShortSideFit:i=this.findPositionForNewNodeBestShortSideFit(t,e,r,n);break;case FindPosition.BottomLeft:i=this.findPositionForNewNodeBottomLeft(t,e,r,n);break;case FindPosition.ContactPoint:i=this.findPositionForNewNodeContactPoint(t,e,r);break;case FindPosition.LongSideFit:i=this.findPositionForNewNodeBestLongSideFit(t,e,n,r);break;case FindPosition.AreaFit:i=this.findPositionForNewNodeBestAreaFit(t,e,r,n)}return 0===i.height||(this.allowRotate&&(i.height===e&&i.width===t?i.isRotated=!1:i.isRotated=!0),this.placeRectangle(i)),i}get occupancy(){let t=0;for(const e of this.usedRects)t+=e.width*e.height;return t/(this.containerWidth*this.containerHeight)}eraseNoce(t){let e=this.usedRects.indexOf(t);-1!=e&&this.usedRects.splice(e,1),e=this.freeRects.indexOf(t),-1==e&&(this.freeRects.push(t),this.pruneFreeList())}placeRectangle(t){let e=this.freeRects.length;for(let s=0;s<e;s++)this.splitFreeNode(this.freeRects[s],t)&&(this.freeRects.splice(s,1),s--,e--);this.pruneFreeList(),this.usedRects.push(t)}scoreRectangle(t,e,s,i,r){let n=new Rect;switch(i.value=1/0,r.value=1/0,s){case FindPosition.ShortSideFit:n=this.findPositionForNewNodeBestShortSideFit(t,e,i,r);break;case FindPosition.BottomLeft:n=this.findPositionForNewNodeBottomLeft(t,e,i,r);break;case FindPosition.ContactPoint:n=this.findPositionForNewNodeContactPoint(t,e,i),i.value=-i.value;break;case FindPosition.LongSideFit:n=this.findPositionForNewNodeBestLongSideFit(t,e,r,i);break;case FindPosition.AreaFit:n=this.findPositionForNewNodeBestAreaFit(t,e,i,r)}return 0===n.height&&(i.value=1/0,r.value=1/0),n}findPositionForNewNodeBottomLeft(t,e,s,i){this.freeRects;const r=new Rect;let n;s.value=1/0;for(const h of this.freeRects)h.width>=t&&h.height>=e&&(n=h.y+e,(n<s.value||n===s.value&&h.x<i.value)&&(r.x=h.x,r.y=h.y,r.width=t,r.height=e,s.value=n,i.value=h.x)),this.allowRotate&&h.width>=e&&h.height>=t&&(n=h.y+t,(n<s.value||n===s.value&&h.x<i.value)&&(r.x=h.x,r.y=h.y,r.width=e,r.height=t,s.value=n,i.value=h.x));return r}findPositionForNewNodeBestShortSideFit(t,e,s,i){const r=new Rect;let n,h,a,o;s.value=1/0;for(const l of this.freeRects){let _,c,u,d;l.width>=t&&l.height>=e&&(n=Math.abs(l.width-t),h=Math.abs(l.height-e),a=Math.min(n,h),o=Math.max(n,h),(a<s.value||a===s.value&&o<i.value)&&(r.x=l.x,r.y=l.y,r.width=t,r.height=e,s.value=a,i.value=o)),this.allowRotate&&l.width>=e&&l.height>=t&&(_=Math.abs(l.width-e),c=Math.abs(l.height-t),u=Math.min(_,c),d=Math.max(_,c),(u<s.value||u===s.value&&d<i.value)&&(r.x=l.x,r.y=l.y,r.width=e,r.height=t,s.value=u,i.value=d))}return r}findPositionForNewNodeBestLongSideFit(t,e,s,i){const r=new Rect;let n,h,a,o;i.value=1/0;for(const l of this.freeRects)l.width>=t&&l.height>=e&&(n=Math.abs(l.width-t),h=Math.abs(l.height-e),a=Math.min(n,h),o=Math.max(n,h),(o<i.value||o===i.value&&a<s.value)&&(r.x=l.x,r.y=l.y,r.width=t,r.height=e,s.value=a,i.value=o)),this.allowRotate&&l.width>=e&&l.height>=t&&(n=Math.abs(l.width-e),h=Math.abs(l.height-t),a=Math.min(n,h),o=Math.max(n,h),(o<i.value||o===i.value&&a<s.value)&&(r.x=l.x,r.y=l.y,r.width=e,r.height=t,s.value=a,i.value=o));return r}findPositionForNewNodeBestAreaFit(t,e,s,i){const r=new Rect;let n,h,a,o;s.value=1/0;for(const l of this.freeRects)o=l.width*l.height-t*e,l.width>=t&&l.height>=e&&(n=Math.abs(l.width-t),h=Math.abs(l.height-e),a=Math.min(n,h),(o<s.value||o===s.value&&a<i.value)&&(r.x=l.x,r.y=l.y,r.width=t,r.height=e,i.value=a,s.value=o)),this.allowRotate&&l.width>=e&&l.height>=t&&(n=Math.abs(l.width-e),h=Math.abs(l.height-t),a=Math.min(n,h),(o<s.value||o===s.value&&a<i.value)&&(r.x=l.x,r.y=l.y,r.width=e,r.height=t,i.value=a,s.value=o));return r}commonIntervalLength(t,e,s,i){return e<s||i<t?0:Math.min(e,i)-Math.max(t,s)}contactPointScoreNode(t,e,s,i){let r=0;0!==t&&t+s!==this.containerWidth||(r+=i),0!==e&&e+i!==this.containerHeight||(r+=s);for(const n of this.usedRects)n.x!==t+s&&n.x+n.width!==t||(r+=this.commonIntervalLength(n.y,n.y+n.height,e,e+i)),n.y!==e+i&&n.y+n.height!==e||(r+=this.commonIntervalLength(n.x,n.x+n.width,t,t+s));return r}findPositionForNewNodeContactPoint(t,e,s){const i=new Rect;let r;s.value=-1;for(const n of this.freeRects)n.width>=t&&n.height>=e&&(r=this.contactPointScoreNode(n.x,n.y,t,e),r>s.value&&(i.x=n.x,i.y=n.y,i.width=t,i.height=e,s.value=r)),this.allowRotate&&n.width>=e&&n.height>=t&&(r=this.contactPointScoreNode(n.x,n.y,e,t),r>s.value&&(i.x=n.x,i.y=n.y,i.width=e,i.height=t,s.value=r));return i}splitFreeNode(t,e){const s=this.freeRects;if(e.x>=t.x+t.width||e.x+e.width<=t.x||e.y>=t.y+t.height||e.y+e.height<=t.y)return!1;let i;return e.x<t.x+t.width&&e.x+e.width>t.x&&(e.y>t.y&&e.y<t.y+t.height&&(i=t.clone(),i.height=e.y-i.y,s.push(i)),e.y+e.height<t.y+t.height&&(i=t.clone(),i.y=e.y+e.height,i.height=t.y+t.height-(e.y+e.height),s.push(i))),e.y<t.y+t.height&&e.y+e.height>t.y&&(e.x>t.x&&e.x<t.x+t.width&&(i=t.clone(),i.width=e.x-i.x,s.push(i)),e.x+e.width<t.x+t.width&&(i=t.clone(),i.x=e.x+e.width,i.width=t.x+t.width-(e.x+e.width),s.push(i))),!0}pruneFreeList(){const t=this.freeRects;for(let e=0;e<t.length;e++)for(let s=e+1;s<t.length;s++){if(t[e].isIn(t[s])){t.splice(e,1);break}t[s].isIn(t[e])&&t.splice(s,1)}}}class Rect{constructor(){this.x=0,this.y=0,this.width=0,this.height=0,this.isRotated=!1}clone(){const t=new Rect;return t.x=this.x,t.y=this.y,t.height=this.height,t.width=this.width,t.info=this.info,t}isIn(t){return this.x>=t.x&&this.y>=t.y&&this.x+this.width<=t.x+t.width&&this.y+this.height<=t.y+t.height}get isEmpty(){return 0==this.x&&0==this.y&&0==this.width&&0==this.height}}class RGBA8888Texture extends Texture2D{constructor(t,e){super(),this.reset({width:t,height:e,format:Texture2D.PixelFormat.RGBA8888})}fillRect(t,e,s,i,r){let n=r>>24&255,h=r>>16&255,a=r>>8&255,o=255&r;this.__fillRect(t,e,s,i,n,h,a,o)}__fillRect(t,e,s,i,r,n,h,a){let o,l=new Uint8Array(s*i*4);for(let t=0;t<s;t++)for(let e=0;e<i;e++)o=4*(e*s+t),l[o]=n,l[o+1]=h,l[o+2]=a,l[o+3]=r;this.copyBuffersToTexture(l,t,e,s,i)}setPixel(t,e,s,i,r,n){this.__fillRect(r,n,1,1,i,t,e,s)}setPixelColor(t,e,s){let i=t>>24&255,r=t>>16&255,n=t>>8&255,h=255&t;this.setPixel(r,n,h,i,e,s)}draw2Texture(t,e,s,i,r,n,h,a=gfx.Filter.POINT){let o=new Uint8Array(i*r*4),l=new gfx.BufferTextureCopy;l.texOffset.x=e,l.texOffset.y=s,l.texExtent.width=i,l.texExtent.height=r,this._getGFXDevice().copyTextureToBuffers(t.getGFXTexture(),[o],[l]),l.texOffset.x=n,l.texOffset.y=h,this._getGFXDevice().copyBuffersToTexture([o],this.getGFXTexture(),[l])}copyBuffersToTexture(t,e,s,i,r){let n=new gfx.BufferTextureCopy;n.texOffset.x=e,n.texOffset.y=s,n.texExtent.width=i,n.texExtent.height=r;const h=this.getGFXTexture();h&&this._getGFXDevice().copyBuffersToTexture([t],h,[n])}}class Handler{constructor(){this.once=!0}run(...t){this.method&&!this.isOver&&(this.method.apply(this.caller,t),this.once&&(this.isOver=!0))}equal(t){return this.method==t.method&&this.caller==t.caller}static create(t,e,s){var i=new Handler;return i.caller=t,i.method=e,i.once=s,i.isOver=!1,i}}class List extends EventDispatcher{constructor(t=!0){super(),this.__only=!1,this.count=0,this.__only=t,this.__element=[]}push(t){if(this.__only){if(this.__element.indexOf(t)>=0)return!1}return this.__element.push(t),this.count=this.__element.length,this.hasEvent(Event.ADD)&&this.emit(Event.ADD,t),!0}unshift(t){if(this.__only){if(this.__element.indexOf(t)>=0)return!1}return this.__element.unshift(t),this.count=this.__element.length,this.hasEvent(Event.ADD)&&this.emit(Event.ADD,t),!0}pop(){if(this.__element.length>0){const t=this.__element.pop();return this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,t),t}return null}shift(){if(this.__element.length>0){const t=this.__element.shift();return this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,t),t}return null}removeAt(t){if(t>=this.__element.length)throw new Error("删除索引超出范围！");const e=this.__element[t];return this.__element.splice(t,1),this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,e),e}remove(t){let e=this.__element.indexOf(t);if(e<0)throw new Error("要删除的内容不在列表中！"+t);const s=this.__element[e];this.__element.splice(e,1),this.count=this.__element.length,this.hasEvent(Event.REMOVE)&&this.emit(Event.REMOVE,s)}clear(){this.count=0,this.__element.length=0,this.hasEvent(Event.CLEAR)&&this.emit(Event.CLEAR)}has(t){return this.find(t)>=0}find(t){return this.__element.indexOf(t)}findIndex(t){return this.__element.findIndex(t)}get(t){if(t>=this.__element.length)throw new Error("超出索引范围:"+t+"/"+this.__element.length);return this.__element[t]}get elements(){return this.__element}}class FunctionHookInfo{equal(t,e,s){return this.functionName==t&&(!!e.equal(this.preHandler)&&!!s.equal(this.laterHandler))}}class FunctionHook{constructor(t){this.data=t,this.__functions=[],this.__preHandlerMap=new Map,this.__laterHandlerMap=new Map,this.__groupMap=new Map}addHook(t,e,s,i){let r=this.__groupMap.get(t);r||(r=[],this.__groupMap.set(t,r));for(let t=0;t<r.length;t++){if(r[t].equal(e,s,i))return}let n=new FunctionHookInfo;if(n.functionName=e,n.preHandler=s,n.laterHandler=i,r.push(n),this.__functions.indexOf(e)<0){let t=this.data[e];if(!t)throw new Error("方法不存在！");let s=this.__preHandlerMap.get(e);s||(s=[],this.__preHandlerMap.set(e,s));let i=this.__laterHandlerMap.get(e);i||(i=[],this.__laterHandlerMap.set(e,i));let r=function(...e){if(s&&s.length)for(let t=0;t<s.length;t++){s[t].run(e)}if(t(e),i&&i.length)for(let t=0;t<i.length;t++){i[t].run(e)}};this.data[e]=r,this.data["old_"+e]=t,this.__functions.push(e)}let h=this.__preHandlerMap.get(e);h||(h=[],this.__preHandlerMap.set(e,h)),h.indexOf(s)<0&&h.push(s);let a=this.__laterHandlerMap.get(e);a||(a=[],this.__laterHandlerMap.set(e,a)),a.indexOf(i)<0&&a.push(i)}removeHook(t,e,s,i){let r,n,h=this.__groupMap.get(t);if(h){if(!e){for(let t=0;t<h.length;t++){const e=h[t];e.preHandler&&(r=this.__preHandlerMap.get(e.functionName),n=r.indexOf(e.preHandler),n>=0&&r.splice(n,1),0==r.length&&this.__preHandlerMap.delete(e.functionName)),e.laterHandler&&(r=this.__laterHandlerMap.get(e.functionName),n=r.indexOf(e.laterHandler),n>=0&&r.splice(n,1),0==r.length&&this.__laterHandlerMap.delete(e.functionName))}return h.length=0,void this.__groupMap.delete(t)}for(let t=0;t<h.length;t++){const a=h[t];if(a.equal(e,s,i))return h.splice(t,1),a.preHandler&&(r=this.__preHandlerMap.get(e),n=r.indexOf(a.preHandler),n>=0&&r.splice(n,1)),void(a.laterHandler&&(r=this.__laterHandlerMap.get(e),n=r.indexOf(a.laterHandler),n>=0&&r.splice(n,1)))}}}}class TickerManagerImpl{constructor(){this.__tickerRoot=find("TickerManager"),this.__tickerRoot||(this.__tickerRoot=new Node("TickerManager"),director.getScene().addChild(this.__tickerRoot)),this.__tickerManager=this.__tickerRoot.addComponent(TickManagerComponent)}addTicker(t){this.__tickerManager.addTicker(t)}removeTicker(t){this.__tickerManager.removeTicker(t)}callNextFrame(t,e){this.__tickerManager.callNextFrame(t,e)}clearNextFrame(t,e){this.__tickerManager.clearNextFrame(t,e)}}class TickManagerComponent extends Component$1{constructor(){super(...arguments),this.__tickerList=[],this.__nextFrameCallBacks=[]}update(t){let e;for(;this.__nextFrameCallBacks.length;)e=this.__nextFrameCallBacks.shift(),e.callBack.apply(e.caller);for(let e=0;e<this.__tickerList.length;e++){this.__tickerList[e].tick(t)}}addTicker(t){if(this.__tickerList.indexOf(t)>=0)throw new Error("Ticker 重复添加！");this.__tickerList.push(t)}removeTicker(t){let e=this.__tickerList.indexOf(t);if(e<0)throw new Error("找不到要删除的Tick！");this.__tickerList.splice(e,1)}callNextFrame(t,e){for(let s=0;s<this.__nextFrameCallBacks.length;s++){if(this.__nextFrameCallBacks[s].equal(t,e))return}this.__nextFrameCallBacks.push(new NextFrameHandler(t,e))}clearNextFrame(t,e){for(let s=0;s<this.__nextFrameCallBacks.length;s++){this.__nextFrameCallBacks[s].equal(t,e)&&this.__nextFrameCallBacks.splice(s,1)}}}class NextFrameHandler{constructor(t,e){this.callBack=t,this.caller=e}equal(t,e){return this.caller===e&&this.callBack===t}}class TickerManager{static addTicker(t){this.impl.addTicker(t)}static removeTicker(t){this.impl.removeTicker(t)}static callNextFrame(t,e){this.impl.callNextFrame(t,e)}static clearNextFrame(t,e){this.impl.clearNextFrame(t,e)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new TickerManagerImpl),this.__impl}}TickerManager.KEY="TickerManager";class BindInfo{constructor(t,e,s){this.property=t,this.targetOrCallBack=e,this.tPropertyOrCaller=s}equal(t,e,s){return t==this.property&&this.targetOrCallBack==e&&this.tPropertyOrCaller==s}}class PropertyBinder{constructor(t){this.data=t,this.__propertys=[],this.__changedPropertys=[],this.__bindedMap=new Map,this.__bindedGroupMap=new Map}bind(t,e,s,i){let r,n=this.__bindedGroupMap.get(t);n||(n=[],this.__bindedGroupMap.set(t,n));let h,a=!1;if(Array.isArray(e))for(let t=0;t<e.length;t++){const o=e[t];this.__checkProperty(o);for(let t=0;t<n.length;t++)r=n[t],r.equal(o,s,i)&&(a=!0);a||(r=new BindInfo(o,s,i),h=this.__bindedMap.get(o),h||(h=[],this.__bindedMap.set(o,h)),h.push(r),n.push(r),this.__propertyChanged(o))}else{this.__checkProperty(e);for(let t=0;t<n.length;t++)if(r=n[t],r.equal(e,s,i))return;r=new BindInfo(e,s,i),h=this.__bindedMap.get(e),h||(h=[],this.__bindedMap.set(e,h)),h.push(r),n.push(r),this.__propertyChanged(e)}}unbind(t,e,s,i){let r,n,h,a=this.__bindedGroupMap.get(t);if(a){if(null==e){for(let t=0;t<a.length;t++)r=a[t],n=this.__bindedMap.get(r.property),n&&n.length>0&&(h=n.indexOf(r),h>=0&&n.splice(h,1)),0==n.length&&this.__bindedMap.delete(r.property);return a.length=0,void this.__bindedGroupMap.delete(t)}if(Array.isArray(e)){for(let t=0;t<e.length;t++){const o=e[t];for(let t=0;t<a.length;t++)r=a[t],n=this.__bindedMap.get(r.property),r.equal(o,s,i)&&(h=n.indexOf(r),h>=0&&n.splice(h,1),a.splice(t,1),t--)}0==a.length&&this.__bindedGroupMap.delete(t)}else{for(let t=0;t<a.length;t++)r=a[t],n=this.__bindedMap.get(r.property),r.equal(e,s,i)&&(h=n.indexOf(r),h>=0&&n.splice(h,1),a.splice(t,1),t--);0==a.length&&this.__bindedGroupMap.delete(t)}}}__checkProperty(t){if(this.__propertys.indexOf(t)<0){let e=this.data[t];this.__defineReactive(this.data,t,e),this.__propertys.push(t)}}__defineReactive(t,e,s){let i=this;Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){return s},set:function(t){s!=t&&(s=t,i.__propertyChanged(e))}})}__propertyChanged(t,e=!1){this.__changedPropertys.indexOf(t)<0&&(this.__changedPropertys.push(t),TickerManager.callNextFrame(this.__nextFramePropertyUpdate,this))}__nextFramePropertyUpdate(t=!1){let e;for(let t=0;t<this.__changedPropertys.length;t++)e=this.__changedPropertys[t],this.__updateProperty(e);this.__changedPropertys.length=0}__updateProperty(t){let e,s=this.__bindedMap.get(t);if(s&&s.length)for(let i=0;i<s.length;i++)e=s[i],"function"!=typeof e.targetOrCallBack?e.targetOrCallBack[e.tPropertyOrCaller]=this.data[t]:e.targetOrCallBack.apply(e.tPropertyOrCaller,this.__changedPropertys)}}class BinderUtils{constructor(){}static bind(t,e,s,i,r){let n=e.$PropertyBinder;n||(n=new PropertyBinder(e),e.$PropertyBinder=n),n.bind(t,s,i,r)}static unbind(t,e,s,i,r){let n=e.$PropertyBinder;n&&n.unbind(t,s,i,r)}static addHook(t,e,s,i,r){let n=e.$FunctionHook;n||(n=new FunctionHook(e),e.$FunctionHook=n),n.addHook(t,s,i,r)}static removeHook(t,e,s,i,r){let n=e.$FunctionHook;n&&n.removeHook(t,s,i,r)}}class BindingUtils{constructor(){this.__bindRecords=[],this.__hookRecords=[]}__bind(t,e,s,i){for(let r=0;r<this.__bindRecords.length;r++){const n=this.__bindRecords[r];if(n.source==t&&n.property==e&&n.targetOrCallback==s&&n.targetPropertyOrCaller==i)throw new Error("重复绑定："+t+e+s+i)}this.__bindRecords.push({source:t,property:e,targetOrCallback:s,targetPropertyOrCaller:i}),BinderUtils.bind(this,t,e,s,i)}__unbind(t,e,s,i){for(let r=0;r<this.__bindRecords.length;r++){const n=this.__bindRecords[r];n.source==t&&n.property==e&&n.targetOrCallback==s&&n.targetPropertyOrCaller==i&&this.__bindRecords.splice(r,1)}BinderUtils.unbind(this,t,e,s,i)}__addHook(t,e,s,i){for(let r=0;r<this.__hookRecords.length;r++){const n=this.__hookRecords[r];if(n.source==t&&n.functionName==e&&s.equal(n.preHandler)&&i.equal(n.laterHandler))throw new Error("重复绑定："+t+" "+e)}this.__hookRecords.push({source:t,functionName:e,preHandler:s,laterHandler:i}),BinderUtils.addHook(this,t,e,s,i)}__removeHook(t,e,s,i){for(let r=0;r<this.__hookRecords.length;r++){const n=this.__hookRecords[r];n.source==t&&n.functionName==e&&s.equal(n.preHandler)&&i.equal(n.laterHandler)&&this.__hookRecords.splice(r,1)}BinderUtils.removeHook(this,t,e,s,i)}bindAA(t,e,s,i){this.__bind(t,e,s,i)}unbindAA(t,e,s,i){this.__unbind(t,e,s,i)}bindAM(t,e,s,i){this.__bind(t,e,s,i)}unbidAM(t,e,s,i){this.__unbind(t,e,s,i)}bindMM(t,e,s,i){this.__addHook(t,e,s,i)}unbindMM(t,e,s,i){this.__removeHook(t,e,s,i)}bindByRecords(){for(let t=0;t<this.__bindRecords.length;t++){const e=this.__bindRecords[t];BinderUtils.bind(this,e.source,e.property,e.targetOrCallback,e.targetPropertyOrCaller)}for(let t=0;t<this.__hookRecords.length;t++){const e=this.__hookRecords[t];BinderUtils.addHook(this,e.source,e.functionName,e.preHandler,e.laterHandler)}}unbindByRecords(){for(let t=0;t<this.__bindRecords.length;t++){const e=this.__bindRecords[t];BinderUtils.unbind(this,e.source,e.property,e.targetOrCallback,e.targetPropertyOrCaller)}for(let t=0;t<this.__hookRecords.length;t++){const e=this.__hookRecords[t];BinderUtils.removeHook(this,e.source,e.functionName,e.preHandler,e.laterHandler)}}destroy(){this.__hookRecords&&(this.__hookRecords.length=0,this.__hookRecords=null),this.__bindRecords&&(this.__bindRecords.length=0,this.__bindRecords=null)}}class TimerImpl{constructor(){this.__lastTime=0,this.reset(),TickerManager.addTicker(this)}reset(){this.__lastTime=Date.now()/1e3}tick(t){this.__lastTime+=t}get currentTime(){return this.__lastTime}get absTime(){return this.reset(),this.currentTime}}class Timer{static get currentTime(){return this.impl.currentTime}static get absTime(){return this.impl.absTime}static reset(t){this.impl.reset(t)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new TimerImpl),this.__impl}}Timer.KEY="Timer";class ResManagerImpl{constructor(){this.__resDic=new Dictionary,this._waitDestory=[],TickerManager.addTicker(this)}tick(t){ResManager.AUTO_GC&&this.gc()}addRes(t){if(this.__resDic.has(t.key))throw new Error("重复添加资源！");this.__resDic.set(t.key,t),this._waitDestory.push(t),t.lastOpTime=Timer.currentTime}hasRes(t){return this.__resDic.has(t)}_getRes(t){return this.__resDic.get(t)}addResRef(t,e){if(!this.__resDic.has(t))throw new Error("未找到资源："+t);let s=this.__resDic.get(t),i=this._waitDestory.indexOf(s);return i>=0&&this._waitDestory.splice(i,1),s.lastOpTime=Timer.currentTime,s.addRef(e)}removeResRef(t){if(!this.__resDic.has(t.key))throw new Error("未找到资源："+t.key);let e=this.__resDic.get(t.key);e.removeRef(t),0==e.refLength&&this._waitDestory.push(e),e.lastOpTime=Timer.currentTime}gc(t){let e,s=Timer.currentTime;for(let i=0;i<this._waitDestory.length;i++)e=this._waitDestory[i],e.refCount>0||(1==t||s-e.lastOpTime>ResManager.GC_TIME)&&(this._waitDestory.splice(i,1),this.destoryRes(e),i--)}destoryRes(t){this.__resDic.delete(t.key),t.destroy()}get resList(){return this.__resDic.elements}}class ResManager{static addRes(t){this.impl.addRes(t)}static hasRes(t){return this.impl.hasRes(t)}static _getRes(t){return this.impl._getRes(t)}static addResRef(t,e){return this.impl.addResRef(t,e)}static removeResRef(t){return this.impl.removeResRef(t)}static gc(t){return this.impl.gc(t)}static resList(){return this.impl.resList}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new ResManagerImpl),this.__impl}}ResManager.KEY="ResManager",ResManager.GC_TIME=15,ResManager.AUTO_GC=!0;class ResRef{constructor(){this.key="",this.__isDispose=!1}dispose(){if(this.__isDispose)throw new Error("重复释放资源引用");this.__isDispose=!0,ResManager.removeResRef(this)}get isDispose(){return this.__isDispose}reset(){this.key="",this.refKey=void 0,this.content=null,this.__isDispose=!1}destroy(){this.key="",this.refKey=void 0,this.content=null}}function url2Key(t){return ResURLUtils.url2Key(t)}function key2URL(t){return ResURLUtils.key2Url(t)}function fullURL(t){return"string"==typeof t?t:t.type==Texture2D?t.url+"/texture":t.type==SpriteFrame?t.url+"/spriteFrame":t.url}class ResURLUtils{static getAssetType(t){if(!this.__assetTypes.has(t))throw new Error("未找到对应资源类型："+t);return this.__assetTypes.get(t)}static _getURL(t){let e=t.length,s=e-8,i=t.substring(s);return"/texture"===i?t.substring(0,s):(s=e-12,i=t.substring(s),"/spriteFrame"===i?t.substring(0,s):t)}static key2Url(t){if(t.indexOf("|")){let e=t.split("|");return{url:this._getURL(e[0]),bundle:e[1],type:this.getAssetType(e[2])}}return t}static url2Key(t){return null==t||null==t?"":"string"==typeof t?t:t.type==SpriteFrame?t.url+"/spriteFrame|"+t.bundle+"|"+this.getClassName(t.type):t.type==Texture2D?t.url+"/texture|"+t.bundle+"|"+this.getClassName(t.type):t.url+"|"+t.bundle+"|"+this.getClassName(t.type)}static getClassName(t){let e;e="string"!=typeof t?t.toString():t,e=e.replace("function ","");let s=e.indexOf("()");if(s<0)throw new Error("获取类型名称错误："+e);return e=e.substring(0,s),this.__assetTypes.has(e)||this.__assetTypes.set(e,t),e}}ResURLUtils.__assetTypes=new Map;class AudioChannel{constructor(t,e){null==e&&(e=t.addComponent(AudioSource)),this.__node=t,this.__source=e}get url(){return this.__url}get mute(){return this.__mute}set mute(t){this.__mute!=t&&(this.__mute=t,this.__mute?(this.__volume=this.__source.volume,this.__source.volume=0):this.__source.volume=this.__volume)}play(t,e,s,i,r=!1,n=1){this.__reset(),this.__url=t,this.__playedComplete=e,this.__isPlaying=!0,this.__speed=n,this.__loop=r,i?(i.time<=0&&(this.mute?this.__volume=s:this.__source.volume=s),null==this.__fadeData&&(this.__fadeData=new FadeData),this.__fadeData.startTime=director.getTotalTime(),this.__fadeData.startValue=null==i.startVolume?this.__source.volume:i.startVolume,this.__fadeData.time=i.time,this.__fadeData.endValue=s,this.__fadeData.complete=i.complete,this.__fadeData.completeStop=i.completeStop):this.__volume=s,this.__startTime=director.getTotalTime(),this.__time=Number.MAX_VALUE,Res.getResRef(this.url,"AudioChannel").then(t=>{if(t instanceof ResRef){if(0==this.__isPlaying)return void t.dispose();if(url2Key(this.url)!=t.key)return void t.dispose();this.__ref=t,this.__play()}},t=>{console.error(t),this.__isPlaying=!1,this.__source.stop()})}stop(){this.__source.playing&&this.__source.stop(),this.__isPlaying=!1,this.__reset()}get isPlaying(){return this.__isPlaying||this.__source.playing}fade(t,e,s,i,r){this.isPlaying&&(this.__paused=!1,t<=0?(this.mute?this.__volume=e:this.__source.volume=e,r&&(this.stop(),i&&i())):(null==this.__fadeData&&(this.__fadeData=new FadeData),this.__fadeData.startTime=director.getTotalTime(),this.__fadeData.startValue=null==s?this.__source.volume:s,this.__fadeData.time=t,this.__fadeData.endValue=e,this.__fadeData.complete=i,this.__fadeData.completeStop=r))}__reset(){this.__url=null,this.__ref&&(this.__ref.dispose(),this.__ref=null),this.__isPlaying=!1,this.__paused=!1,this.__fadeData=null}__clipLoaded(t,e){if(t)return console.error(t.message),this.__isPlaying=!1,void this.__source.stop();if(0==this.__isPlaying)return void e.dispose();url2Key(this.url)==e.key?(this.__ref=e,this.__play()):e.dispose()}__play(){this.__source.clip=this.__ref.content,this.__source.loop=this.__loop,this.__source.play();let t=director.getTotalTime();this.__fadeData?(this.__fadeData.startTime=t,this.mute?this.__volume=this.__fadeData.startValue:this.__source.volume=this.__fadeData.startValue):this.mute?this.__source.volume=0:this.__source.volume=this.__volume,this.__startTime=director.getTotalTime(),this.__time=1e3*this.__source.duration}tick(t){if(this.__paused||0==this.__isPlaying||null==this.__url)return;let e,s=director.getTotalTime();if(this.__fadeData){e=s-this.__fadeData.startTime;let t=e/this.__fadeData.time;if(t=t>1?1:t,this.mute?this.__volume=this.__fadeData.startValue+(this.__fadeData.endValue-this.__fadeData.startValue)*t:this.__source.volume=this.__fadeData.startValue+(this.__fadeData.endValue-this.__fadeData.startValue)*t,1==t){let t=this.__fadeData.complete;this.__fadeData.completeStop&&(this.__source.stop(),this.__isPlaying=!1,this.__reset()),t&&t(),this.__fadeData=null}}this.__loop||(e=s-this.__startTime,e/this.__time>=1&&(this.__source.stop(),this.__isPlaying=!1,this.__playedComplete&&this.__playedComplete(),this.__reset()))}resume(){if(0==this.__paused)return;let t=director.getTotalTime()-this.__pauseTime;this.__fadeData&&(this.__fadeData.startTime+=t),this.__startTime+=t,this.__source.play(),this.__paused=!1}pause(){this.__paused||(this.__paused=!0,this.__pauseTime=director.getTotalTime(),this.__source.pause())}get curVolume(){return this.__source.volume}}class FadeData{}class AudioManagerImpl{constructor(){let t;this.__musicChannelIndex=0,this.__volume=1,this.__musicVolume=1,this.__musicChannels=[],this.__soundChannels=[],TickerManager.addTicker(this),this.__audioRoot=find("AudioManager"),null==this.__audioRoot&&(this.__audioRoot=new Node("AudioManager"),director.getScene().addChild(this.__audioRoot));for(let e=0;e<2;e++)t=new AudioChannel(this.__audioRoot),this.__musicChannels.push(t)}get volume(){return this.__volume}set volume(t){if(this.__volume==t)return;let e,s;this.__volume=t;for(let t=0;t<this.__musicChannels.length;t++)s=this.__musicChannels[t],s.isPlaying&&(e=s.volume*this.__musicVolume*this.__volume,s.fade(100,e,s.curVolume));for(let t=0;t<this.__soundChannels.length;t++)s=this.__soundChannels[t],s.isPlaying&&(e=s.volume*this.__soundVolume*this.__volume,s.fade(100,e,s.curVolume))}set musicVolume(t){if(this.__musicVolume==t)return;if(this.__musicVolume=t,this.muteMusic)return;let e=this.__musicChannels[this.__musicChannelIndex];if(e&&e.isPlaying){let t=e.volume*this.__musicVolume*this.__volume;e.fade(100,t,e.curVolume)}}get musicVolume(){return this.__musicVolume}get soundVolume(){return this.__soundVolume}set soundVolume(t){if(this.__soundVolume==t)return;let e;this.__soundVolume=t;for(let t=0;t<this.__soundChannels.length;t++)if(e=this.__soundChannels[t],e.isPlaying){let t=e.volume*this.__soundVolume*this.__volume;e.fade(100,t,e.curVolume)}}set mute(t){this.__mute!=t&&(this.__mute=t,this.__changedMutes())}get mute(){return this.__mute}get muteMusic(){return this.__muteMusic}set muteMusic(t){this.__muteMusic!=t&&(this.__muteMusic=t,this.__changedMutes())}get muteSound(){return this.__muteSound}set muteSound(t){this.__muteSound!=t&&(this.__muteSound=t,this.__changedMutes())}__changedMutes(){for(let t=0;t<this.__musicChannels.length;t++){this.__musicChannels[t].mute=this.muteMusic||this.mute}for(let t=0;t<this.__soundChannels.length;t++){this.__soundChannels[t].mute=this.muteSound||this.mute}}playMusic(t,e,s,i){let r;r=this.muteMusic||this.mute?0:e*this.__musicVolume*this.__volume;let n,h=this.__musicChannels[this.__musicChannelIndex];h&&h.isPlaying&&url2Key(h.url)==url2Key(t)||(this.__musicChannelIndex++,this.__musicChannelIndex=this.__musicChannelIndex%2,0==this.__musicChannelIndex?(h=this.__musicChannels[0],n=this.__musicChannels[1]):(h=this.__musicChannels[1],n=this.__musicChannels[0]),n.isPlaying&&n.fade(500,0,void 0,null,!0),h.volume=e,h.play(t,null,r,{time:500,startVolume:0},!0,s))}stopMusic(){let t=this.__musicChannels[this.__musicChannelIndex];t&&t.isPlaying&&t.stop()}pauseMusic(){let t=this.__musicChannels[this.__musicChannelIndex];t&&t.pause()}resumeMusic(){let t=this.__musicChannels[this.__musicChannelIndex];t&&t.resume()}playSound(t,e,s,i,r){let n;n=this.muteSound||this.mute?0:this.soundVolume*s*this.__volume;let h=this.getIdleChannel();h&&(h.volume=s,h.play(t,e,n,null,r,i))}getPlaying(t){for(let e=0;e<this.__soundChannels.length;e++){const s=this.__soundChannels[e];if(s.isPlaying&&url2Key(s.url)==url2Key(t))return s}return null}getIdleChannel(){let t,e;for(t=0;t<this.__soundChannels.length;t++)if(e=this.__soundChannels[t],0==e.isPlaying)return e;return t<AudioManager.MAX_SOUND_CHANNEL_COUNT?(e=new AudioChannel(this.__audioRoot),this.__soundChannels.push(e),e):null}tick(t){for(let e=0;e<this.__musicChannels.length;e++){const s=this.__musicChannels[e];s.isPlaying&&s.tick(t)}for(let e=0;e<this.__soundChannels.length;e++){const s=this.__soundChannels[e];s.isPlaying&&s.tick(t)}}}class AudioManager{static get volume(){return this.impl.volume}static set volume(t){this.impl.volume=t}static get musicVolume(){return this.impl.musicVolume}static set musicVolume(t){this.impl.musicVolume=t}static get soundVolume(){return this.impl.soundVolume}static set soundVolume(t){this.impl.soundVolume=t}static get mute(){return this.impl.mute}static set mute(t){this.impl.mute=t}static get muteMusic(){return this.impl.muteMusic}static set muteMusic(t){this.impl.muteMusic=t}static get muteSound(){return this.impl.muteSound}static set muteSound(t){this.impl.muteSound=t}static playMusic(t,e=1,s=1,i=!1){this.impl.playMusic(t,e,s,i)}static stopMusic(){this.impl.stopMusic()}static pauseMusic(){this.impl.pauseMusic()}static resumeMusic(){this.impl.resumeMusic()}static playSound(t,e,s,i,r){this.impl.playSound(t,e,s,i,r)}static getPlaying(t){return this.impl.getPlaying(t)}static get impl(){return null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl&&(this.__impl=new AudioManagerImpl),this.__impl}}AudioManager.KEY="drongo.AudioManager",AudioManager.MAX_SOUND_CHANNEL_COUNT=30;class Resource{constructor(){this.state=0,this.key="",this.lastOpTime=0,this.__refs=[],this.__content=null}reset(){}set content(t){this.__content=t,this.__content instanceof Asset&&this.__content.addRef()}get content(){return this.__content}addRef(t){let e=new ResRef;return e.key=this.key,e.refKey=t,this.content instanceof Asset?(this.content instanceof Prefab?e.content=instantiate(this.content):e.content=this.content,this.content.addRef()):e.content=this.content,this.__refs.push(e),e}removeRef(t){let e=this.__refs.indexOf(t);if(e<0)throw new Error("未找到需要删除的引用！");if(this.content instanceof Asset){if(this.content instanceof Prefab){let e=t.content;isValid(e)&&e.destroy()}this.content.decRef()}this.__refs.splice(e,1),t.destroy()}destroy(){if(this.refCount>0||this.refLength>0)throw new Error("发现销毁资源时引用数量不为0");this.__content instanceof Asset&&(this.__content.decRef(),this.__content.refCount<=0&&(Debuger.log("Res","资源销毁=>"+this.key),assetManager.releaseAsset(this.__content))),this.key="",this.__refs.length=0,this.__content=null}get refCount(){return this.__content instanceof Asset?this.__content.refCount-1:this.__refs.length}get refLength(){return this.__refs.length}}var GUIState,__awaiter$2=function(t,e,s,i){return new(s||(s=Promise))((function(r,n){function h(t){try{o(i.next(t))}catch(t){n(t)}}function a(t){try{o(i.throw(t))}catch(t){n(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(h,a)}o((i=i.apply(t,e||[])).next())}))};class Res{static setResLoader(t,e){this.__loaders.set(t,e)}static getResLoader(t){if(!this.__loaders.has(t))throw new Error("未注册的加载器："+t);return this.__loaders.get(t)}static getResRef(t,e,s){return __awaiter$2(this,void 0,void 0,(function*(){if(Array.isArray(t))throw new Error("获取资源列表请调用getResRefList或getResRefMap");let i=url2Key(t);return ResManager.hasRes(i)?Promise.resolve(ResManager.addResRef(i,e)):yield this.loadAsset(t,e,t=>{s&&s(t)})}))}static getResRefList(t,e,s){return __awaiter$2(this,void 0,void 0,(function*(){let i=[];for(let r=0;r<t.length;r++){const n=t[r],h=yield this.loadAsset(n,e,e=>{s&&s((0+e)/t.length)});i.push(h)}return yield Promise.all(i)}))}static getResRefMap(t,e,s,i){return __awaiter$2(this,void 0,void 0,(function*(){s=s||new Map;let r=yield this.getResRefList(t,e,i);for(let t=0;t<r.length;t++){const e=r[t];s.set(e.key,e)}return Promise.resolve(s)}))}static loadAsset(t,e,s){return __awaiter$2(this,void 0,void 0,(function*(){const i=url2Key(t);if(ResManager.hasRes(i))return Promise.resolve(ResManager.addResRef(i,e));return new Promise((i,r)=>{if("string"==typeof t)throw new Error("未实现！");let n,h=assetManager.getBundle(t.bundle);h?(n="string"==typeof t.type?this.getResLoader(t.type):this.defaultAssetLoader,n(t,h,e,s,(t,e)=>{t?r(t):i(e)})):assetManager.loadBundle(t.bundle,(h,a)=>{h?r(h):(n="string"==typeof t.type?this.getResLoader(t.type):this.defaultAssetLoader,n(t,a,e,s,(t,e)=>{t?r(t):i(e)}))})})}))}static defaultAssetLoader(t,e,s,i,r){if("string"==typeof t)throw new Error("url不能为字符串"+t);if("string"==typeof t.type)throw new Error("url.type不能为字符串"+t);e.load(fullURL(t),t.type,i,(e,i)=>{if(e)return void r(e);const n=url2Key(t);if(ResManager.hasRes(n))r(void 0,ResManager.addResRef(n,s));else{let t=new Resource;t.key=n,t.content=i,ResManager.addRes(t),r(void 0,ResManager.addResRef(n,s))}})}}Res.__loaders=new Map;class TaskQueue extends EventDispatcher{constructor(){super(),this.__index=0,this.__taskList=[]}addTask(t){if(this.__taskList.indexOf(t)>=0)throw new Error("重复添加！");this.__taskList.push(t)}removeTask(t){let e=this.__taskList.indexOf(t);if(e<0)throw new Error("未找到要删除的内容！");this.__taskList.splice(e,1)}start(t){this.__index=0,this.__tryNext()}__tryNext(){if(this.__index<this.__taskList.length){let t=this.__taskList[this.__index];t.on(Event.COMPLETE,this.__subTaskEventHandler,this),t.on(Event.PROGRESS,this.__subTaskEventHandler,this),t.on(Event.ERROR,this.__subTaskEventHandler,this),t.start()}else this.emit(Event.COMPLETE)}__subTaskEventHandler(t,e,s){if(t!=Event.PROGRESS)e.offAllEvent(),t!=Event.ERROR?(e.destroy(),this.__index++,this.__tryNext()):this.emit(Event.ERROR,s);else{let t=null==Number(s)?0:Number(s),e=(this.__index+t)/this.__taskList.length;this.emit(Event.PROGRESS,e)}}destroy(){super.destroy(),this.__taskList.length=0,this.__index=0}}class TaskSequence extends EventDispatcher{constructor(){super(),this.__taskList=new Array,this.__index=0}addTask(t){if(this.__taskList.indexOf(t)>=0)throw new Error("重复添加！");this.__taskList.push(t)}removeTask(t){let e=this.__taskList.indexOf(t);if(e<0)throw new Error("找不到要删除的内容!");this.__taskList.splice(e,1)}start(t){for(let t=0;t<this.__taskList.length;t++){const e=this.__taskList[t];e.on(Event.COMPLETE,this.__subTaskEventHandler,this),e.on(Event.ERROR,this.__subTaskEventHandler,this),e.on(Event.PROGRESS,this.__subTaskEventHandler,this),e.start()}}__subTaskEventHandler(t,e,s){t!=Event.PROGRESS?(e.offAllEvent(),t!=Event.ERROR?(this.__index++,this.__index<this.__taskList.length||(e.destroy(),this.emit(Event.COMPLETE))):this.emit(Event.ERROR,s)):this.emit(Event.PROGRESS,this.__index/this.__taskList.length)}destroy(){super.destroy(),this.__taskList.length=0,this.__index=0}}class Matcher extends BitFlag{constructor(t){super();for(let e=0;e<t.length;e++)this.add(t[e])}}class MatcherAllOf extends Matcher{}class MatcherAnyOf extends Matcher{}class MatcherNoneOf extends Matcher{}class Component{get type(){return 0}dispose(){}}class Entity{constructor(t,e){this.__id=t,this.__world=e,this.__components=new Dictionary,this.__componentFlags=new BitFlag}addComponent(t){let e=this.__components.get(t.type);if(e){if(e.indexOf(t)>=0)throw new Error("重复添加Component到Entity")}else e=[],this.__components.set(t.type,e);let s=!0;return t.entity&&(t.entity.__removeComponent(t,!1),s=!1),t.entity=this,e.push(t),this.__componentFlags.add(t.type),s&&this.__world._addComponent(t),t}removeComponent(t){this.__removeComponent(t,!0)}getComponent(t){let e=this.__components.get(t);return e&&e.length>0?e[0]:null}getComponents(t){return this.__components.get(t)}__removeComponent(t,e){let s=this.__components.get(t.type);if(null==s&&0==s.length)throw new Error("该组件不是属于Entity:"+this.__id);let i=s.indexOf(t);if(i<0)throw new Error("该组件不是属于Entity:"+this.__id);this.__componentFlags.remove(t.type),e&&this.__world._removeComponent(t),s.splice(i,1),t.entity=null}get id(){return this.__id}dispose(){let t,e,s=this.__components.elements;for(let i=0;i<s.length;i++){t=s[i];for(let s=0;s<t.length;s++)e=t[s],this.__world._removeComponent(e)}this.__world._removeEntity(this),this.__components=null,this.__world=null,this.__componentFlags.destroy(),this.__componentFlags=null}_matcherGroup(t){let e=!1;t.matcher instanceof MatcherAllOf?this.__componentFlags.has(t.matcher.flags)&&(e=!0):this.__componentFlags.flags&t.matcher.flags&&(e=!0);let s=!0;return t.matcherNoneOf&&this.__componentFlags.flags&t.matcherNoneOf.flags&&(s=!1),e&&s}}class Group{constructor(){this._entitys=new Dictionary}init(t,e){this.matcher=t,this.matcherNoneOf=e,this.__id=e?"id:"+this.matcher.flags+"|"+e.flags:"id:"+this.matcher.flags}get id(){return this.__id}static create(t,e){let s;return s=this.__pool.length?this.__pool.shift():new Group,s.init(t,e),s}static recycle(t){if(this.__pool.indexOf(t)>=0)throw new Error("重复回收!");this.__pool.push(t)}}Group.__pool=[];class System{constructor(t,e){this._group=Group.create(t,e)}tick(t){}}class World{constructor(){this.__components=new Dictionary,this.__entitys=new Dictionary,this.__systems=[]}tick(t){for(var e of this.__systems)e.tick(t)}createEntity(t){let e=new Entity(t,this);return this.__entitys.set(e.id,e),e}getEntity(t){return this.__entitys.get(t)}addSystem(t){if(this.__systems.indexOf(t)>=0)throw new Error("重复添加系统");this.__systems.push(t),this._matcherGroup(t._group)}removeSystem(t){let e=this.__systems.indexOf(t);if(e<0)throw new Error("找不到要删除的系统");this.__systems.splice(e,1),Group.recycle(t._group)}getComponent(t){return this.__components.get(t)}_matcherGroup(t){for(let e=0;e<t.matcher.elements.length;e++)t.matcher.elements[e]}_addComponent(t){let e=this.__components.get(t.type);if(null==e&&(e=[],this.__components.set(t.type,e)),e.indexOf(t)>=0)throw new Error("重复添加组件！");e.push(t);for(let e=0;e<this.__systems.length;e++){const s=this.__systems[e];s._group._entitys.has(t.entity.id)||t.entity._matcherGroup(s._group)&&s._group._entitys.set(t.entity.id,t.entity)}}_removeComponent(t){let e=this.__components.get(t.type);if(null==e)return;let s=e.indexOf(t);if(s<0)throw new Error("找不到要删除的组件");e.splice(s,0);for(let e=0;e<this.__systems.length;e++){const s=this.__systems[e];s._group._entitys.has(t.entity.id)&&s._group._entitys.delete(t.entity.id)}}_removeEntity(t){if(!this.__entitys.has(t.id))throw new Error("找不到要删除的entity:"+t.id);this.__entitys.delete(t.id)}}class FSM extends EventDispatcher{constructor(t,e){super(),this.owner=t,this.__name=e,this.__states=new Map}tick(t){this.__current&&this.__current.tick(t)}addState(t,e){this.__states.set(t,e),e.init(this)}switchState(t,e){if(this.__state==t)return;let s=this.__state,i=this.__current;if(i&&(this.debug&&Debuger.log("FSM",this.__name+" 所属:"+this.owner.name+" 退出状态==>"+this.__current.name),i.exit()),this.__current=null,!this.__states.has(t))throw new Error("状态机:"+this.__name+" 所属:"+this.owner.name+"未找到状态==>"+t);this.__state=t,this.__current=this.__states.get(t),this.debug&&Debuger.log("FSM",this.__name+" 所属:"+this.owner.name+" 进入状态==>"+this.__current.name),this.__current.enter(e),this.emit(Event.State_Changed,s)}get state(){return this.__state}get current(){return this.__current}destroy(){this.__current&&this.__current.exit(),this.__states.forEach(t=>{t.destroy()}),this.__states.clear()}}class LayerManager{static addLayer(t,e){this.impl.addLayer(t,e)}static removeLayer(t){this.impl.removeLayer(t)}static getLayer(t){return this.impl.getLayer(t)}static getAllLayer(){return this.impl.getAllLayer()}static get impl(){if(null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl)throw new Error(this.KEY+"未注入！");return this.__impl}}LayerManager.KEY="drongo.LayerManager",function(t){t[t.Null=0]="Null",t[t.Showing=1]="Showing",t[t.Showed=2]="Showed",t[t.Closeing=3]="Closeing",t[t.Closed=4]="Closed"}(GUIState||(GUIState={}));class GUIManager{static register(t){return this.impl.register(t)}static unregister(t){return this.impl.unregister(t)}static open(t,e){this.impl.open(t,e)}static close(t,e=!0){this.impl.close(t,e)}static closeAll(){this.impl.closeAll()}static getGUIState(t){return this.impl.getGUIState(t)}static isOpen(t){return this.impl.isOpen(t)}static getUIComponent(t,e){return this.impl.getUIComponent(t,e)}static getMediatorByKey(t){return this.impl.getMediatorByKey(t)}static getPrevLayer(){return this.impl.getPrevLayer()}static get impl(){if(null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl)throw new Error("未注入："+GUIManager.KEY);return this.__impl}}GUIManager.KEY="drongo.GUIManager",GUIManager.GUI_GC_INTERVAL=30;class RelationManager{constructor(){}static addRelation(t,e){if(DEBUG&&this.__checkValidity(t,e),this.__map.has(t))throw new Error("重复注册！");this.__map.set(t,e)}static removeRelation(t){if(!this.__map.has(t))throw new Error("找不到要删除的内容！");this.__map.delete(t)}static __checkValidity(t,e){let s,i=t,r=e.show,n=e.hide;if(s=r.show.indexOf(i),s>=0)throw new Error("GuiRelation.config配置错误：gui:"+i+" show.show:中不能包含自身！");if(s=r.hide.indexOf(i),s>=0)throw new Error("GuiRelation.config配置错误：gui:"+i+" show.hide:中不能包含自身！");if(s=n.show.indexOf(i),s>=0)throw new Error("GuiRelation.config配置错误：gui:"+i+" hide.show:中不能包含自身！");if(s=n.hide.indexOf(i),s>=0)throw new Error("GuiRelation.config配置错误：gui:"+i+" hide.hide:中不能包含自身！");for(let t=0;t<r.show.length;t++){const e=r.show[t];if(r.hide.indexOf(e)>=0)throw new Error("GuiRelation.config配置错误：gui:"+i+" show.show和show.hide中包含相同的guikey:"+e)}for(let t=0;t<n.show.length;t++){const e=n.show[t];if(n.hide.indexOf(e)>=0)throw new Error("GuiRelation.config配置错误：gui:"+i+" hide.show和hide.hide中包含相同的guikey:"+e)}}static getRelation(t){return this.__map.get(t)}}RelationManager.__map=new Map;class LoadingView{static show(){this.impl.show()}static hide(){this.impl.hide()}static changeData(t){this.impl.changeData(t)}static get impl(){if(null==this.__impl&&(this.__impl=Injector.getInject(this.KEY)),null==this.__impl)throw new Error(this.KEY+"为注入");return this.__impl}}LoadingView.KEY="drongo.LoadingView";class BaseService{constructor(){}init(t){this.__initCallback=t,this.$assets&&this.$assets.length<=0||Res.getResRefMap(this.$assets,this.name).then(t=>{this.$assetRefs=t,this.$assetsLoaded()},t=>{throw new Error(this.name+"依赖资源加载出错："+t.toString())})}$assetsLoaded(){}$initComplete(){this.__initCallback&&(this.__initCallback(null,this),this.__initCallback=null)}destroy(){this.name=void 0,this.$assets=null,this.$assetRefs&&(this.$assetRefs.forEach(t=>{t.dispose()}),this.$assetRefs=null),this.__initCallback=null}}var __awaiter$1=function(t,e,s,i){return new(s||(s=Promise))((function(r,n){function h(t){try{o(i.next(t))}catch(t){n(t)}}function a(t){try{o(i.throw(t))}catch(t){n(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(h,a)}o((i=i.apply(t,e||[])).next())}))};class ServiceStarter{constructor(t,e){this.__name=t,this.__serviceClass=e}start(){return __awaiter$1(this,void 0,void 0,(function*(){return this.__result||(this.__result=new Promise((t,e)=>{let s=new this.__serviceClass;s.name=this.__name,s.init((s,i)=>{s?e(s):t(i)})})),this.__result}))}destroy(){this.__name=void 0,this.__serviceClass=void 0,this.__result=void 0}}var __awaiter=function(t,e,s,i){return new(s||(s=Promise))((function(r,n){function h(t){try{o(i.next(t))}catch(t){n(t)}}function a(t){try{o(i.throw(t))}catch(t){n(t)}}function o(t){var e;t.done?r(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(h,a)}o((i=i.apply(t,e||[])).next())}))};class ServiceManager{constructor(){this.__registered=new Map,this.__starters=new Map}register(t,e){if(this.__registered.has(t))throw new Error("重复注册服务："+t);this.__registered.set(t,e)}getService(t){return __awaiter(this,void 0,void 0,(function*(){if(!this.__registered.has(t))throw new Error("未注册服务："+t);if(this.__starters.has(t))return this.__starters.get(t).start();let e=new ServiceStarter(t,this.__registered.get(t));return this.__starters.set(t,e),e.start()}))}uninstall(t){if(!this.__starters.has(t))return;this.__starters.get(t).destroy(),this.__starters.delete(t)}}var serviceManager=new ServiceManager;export{AudioChannel,AudioManager,BaseService,BinderUtils,BindingUtils,BitFlag,Component,Debuger,Dictionary,Entity,Event,EventDispatcher,FSM,FindPosition,FunctionHook,GUIManager,GUIState,Group,Handler,Injector,LayerManager,List,LoadingView,LocalStorage,Matcher,MatcherAllOf,MatcherAnyOf,MatcherNoneOf,MaxRectBinPack,Pool,PropertyBinder,RGBA8888Texture,Rect,RelationManager,Res,ResManager,ResRef,Resource,ServiceManager,ServiceStarter,StringUtils,System,TaskQueue,TaskSequence,TickerManager,Timer,World,fullURL,key2URL,serviceManager,url2Key};