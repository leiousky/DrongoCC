// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../drongo-fgui

declare module 'drongo-gui' {
    export { ILayer } from "drongo-gui/layer/ILayer";
    export { ILayerManager } from "drongo-gui/layer/ILayerManager";
    export { LayerManager } from "drongo-gui/layer/LayerManager";
    export { Layer } from "drongo-gui/layer/Layer";
    export { LayerManagerImpl } from "drongo-gui/layer/LayerManagerImpl";
}

declare module 'drongo-gui/layer/ILayer' {
    export interface ILayer {
            addChild(child: any): void;
            addChildAt(child: any, index: number): void;
            removeChild(child: any): void;
            removeChildAt(index: number): void;
            /**
                * 获取指定索引内容
                * @param index
                */
            getChildAt(index: number): any;
            /**
                * 当前层拥有的子对象数量
                */
            getCount(): number;
    }
}

declare module 'drongo-gui/layer/ILayerManager' {
    import { ILayer } from "drongo-gui/layer/ILayer";
    export interface ILayerManager {
            /**
                * 添加层
                * @param key
                * @param layer
                */
            addLayer(key: string, layer: ILayer): void;
            /**
                * 删除层
                * @param key
                */
            removeLayer(key: string): void;
            /**
                * 获取层对象
                * @param key
                */
            getLayer(key: string): ILayer | undefined;
            /**
                * 获得所有层
                */
            getAllLayer(): ILayer[];
    }
}

declare module 'drongo-gui/layer/LayerManager' {
    import { ILayer } from "drongo-gui/layer/ILayer";
    /**
        * 层管理器
        */
    export class LayerManager {
            static KEY: string;
            /**
                * 添加一个层
                * @param key
                * @param layer
                */
            static addLayer(key: string, layer: ILayer): void;
            /**
                * 删除层
                * @param key
                */
            static removeLayer(key: string): void;
            /**
                * 获取层对象
                * @param key
                */
            static getLayer(key: string): ILayer | undefined;
            /**
                * 获得所有层
                */
            static getAllLayer(): ILayer[];
    }
}

declare module 'drongo-gui/layer/Layer' {
    import { GComponent } from "drongo-fgui";
    import { ILayer } from "drongo-gui/layer/ILayer";
    export class Layer extends GComponent implements ILayer {
        isFullScrene: boolean;
        openRecord: Array<number>;
        constructor(name: string, isFullScrene?: boolean);
        getCount(): number;
    }
}

declare module 'drongo-gui/layer/LayerManagerImpl' {
    import { ILayer } from "drongo-gui/layer/ILayer";
    import { ILayerManager } from "drongo-gui/layer/ILayerManager";
    /**
        * cocos fgui 层管理器
        */
    export class LayerManagerImpl implements ILayerManager {
            constructor();
            /**
                * 添加层
                * @param key
                * @param layer
                */
            addLayer(key: string, layer: ILayer): void;
            /**
                * 删除层
                * @param key
                */
            removeLayer(key: string): void;
            getLayer(layerKey: string): ILayer | undefined;
            /**
                * 获得所有层
                */
            getAllLayer(): ILayer[];
    }
}

