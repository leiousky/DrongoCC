import{Resource,key2URL,url2Key,ResManager,BindingUtils,Timer,Res,LoadingView,serviceManager,GUIManager,Event,LayerManager,TickerManager,GUIState,RelationManager,Injector}from"drongo-cc";import{UIPackage,GComponent,GRoot,AsyncOperation,GGraph}from"drongo-fgui";import{assetManager,Color,Node}from"cc";class FGUIResource extends Resource{constructor(){super()}destroy(){let e=key2URL(this.key);if("string"==typeof e)throw new Error("未处理的Fguipackage销毁！");{UIPackage.removePackage(e.url);let t=assetManager.getBundle(e.bundle).get(e.url);assetManager.releaseAsset(t),console.log("销毁:FGUIPacage=>"+e.bundle+" "+e.url)}super.destroy()}}function fguiResLoader(e,t,i,s,n){"string"==typeof e?n&&n(new Error(e+"类型不正确！"),null):UIPackage.loadPackage(t,e.url,(e,t,i)=>{s&&s(e/t)},(t,s)=>{if(t)return void(n&&n(t,null));const a=url2Key(e);if(!ResManager.hasRes(a)){let e=new FGUIResource;e.key=a,e.content=s,ResManager.addRes(e)}let r=ResManager.addResRef(a,i);n&&n(null,r)})}class Layer extends GComponent{constructor(e,t=!1){super(),this.node.name=e,this.isFullScrene=t,this.openRecord=[],this.makeFullScreen()}getCount(){return this.numChildren}}class LayerManagerImpl{constructor(){this.__layerMap=new Map}addLayer(e,t){if(!(t instanceof Layer))throw new Error("层必须是Layer");GRoot.inst.addChild(t),this.__layerMap.set(e,t)}removeLayer(e){let t=this.__layerMap.get(e);if(!t)throw new Error("找不到要删除的层："+e);GRoot.inst.removeChild(t),this.__layerMap.delete(e)}getLayer(e){return this.__layerMap.get(e)}getAllLayer(){let e=[];return this.__layerMap.forEach((function(t,i){e.push(t)})),e}}class GUISettings{}GUISettings.mask_color=new Color(0,0,0,127.5);class BaseMediator{constructor(){this.ui=null,this.inited=!1,this.__bindEvents=[],this.__bindingUtils=new BindingUtils}init(){}tick(e){}show(e){this.data=e,this._addBindedEvents(),this.__bindingUtils.bindByRecords()}showedUpdate(e){this.data=e}hide(){this._removeBindedEvents(),this.__bindingUtils.unbindByRecords()}destroy(){this.__bindEvents.length=0,this.__bindEvents=null,this.__bindingUtils.destroy(),this.__bindingUtils=null}getUIComponent(e){let t,i=e.split("/"),s=this.ui,n=0;for(;s&&n<i.length;)t=i[n],t.startsWith("m_")&&(t=t.replace("m_","")),s=s.getChild(t),n++;return s}bindAA(e,t,i,s){this.__bindingUtils.bindAA(e,t,i,s)}unbindAA(e,t,i,s){this.__bindingUtils.unbindAA(e,t,i,s)}bindAM(e,t,i,s){this.__bindingUtils.bindAM(e,t,i,s)}unbidAM(e,t,i,s){this.__bindingUtils.unbidAM(e,t,i,s)}bindMM(e,t,i,s){this.__bindingUtils.bindMM(e,t,i,s)}unbindMM(e,t,i,s){this.__bindingUtils.unbindMM(e,t,i,s)}bindEvent(e,t,i,s){for(let n=0;n<this.__bindEvents.length;n++){const a=this.__bindEvents[n];if(a.target==e&&a.eventType==t&&a.handler==i&&a.caller==s)throw new Error("重复绑定UI事件："+e+t+i+s)}this.inited?e.on(t,i,s):this.__bindEvents.push({target:e,eventType:t,handler:i,caller:s})}unbindEvent(e,t,i,s){for(let n=0;n<this.__bindEvents.length;n++){const a=this.__bindEvents[n];a.target==e&&a.eventType==t&&a.handler==i&&a.caller==s&&(this.__bindEvents.splice(n,1),this.inited&&e.off(t,i,s))}}_addBindedEvents(){if(0!=this.__bindEvents.length)for(let e=0;e<this.__bindEvents.length;e++){const t=this.__bindEvents[e];t.target.on(t.eventType,t.handler,t.caller)}}_removeBindedEvents(){if(0!=this.__bindEvents.length)for(let e=0;e<this.__bindEvents.length;e++){const t=this.__bindEvents[e];t.target.off(t.eventType,t.handler,t.caller)}}}var LoadState,__awaiter=function(e,t,i,s){return new(i||(i=Promise))((function(n,a){function r(e){try{h(s.next(e))}catch(e){a(e)}}function o(e){try{h(s.throw(e))}catch(e){a(e)}}function h(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,o)}h((s=s.apply(e,t||[])).next())}))};!function(e){e[e.Null=0]="Null",e[e.Loading=1]="Loading",e[e.Loaded=2]="Loaded"}(LoadState||(LoadState={}));class GUIProxy{constructor(e){if(this.closeTime=0,this.zIndex=0,this.__resRef=null,this.__showing=!1,this.__loadState=LoadState.Null,this.info=e,!this.info)throw new Error("UI信息不能为空！");this.__uiURL={url:"ui/"+this.info.packageName,type:"fgui",bundle:this.info.bundleName}}__loadAssets(){this.__startTime=Timer.currentTime,this.__loadState=LoadState.Loading,Res.getResRef(this.__uiURL,this.info.key,this.__loadAssetProgress.bind(this)).then(this.__loadAssetComplete.bind(this),this.__loadAssetError.bind(this))}__loadAssetProgress(e){LoadingView.changeData({label:this.info.key+" asset loading...",progress:e})}__loadAssetError(e){e&&LoadingView.changeData({label:e})}__loadAssetComplete(e){if(url2Key(this.__uiURL)==e.key){if(this.__resRef=e,!this.__resRef)throw new Error("加载UI资源失败:"+this.info.packageName+" ");this.__createUIMediator()}else e.dispose()}__createUIMediator(){let e=GUIProxy.createNode.addComponent(this.info.key+"ViewCreator"),t=e;if(!t)throw new Error(this.info.key+"ViewCreator类不存在或未实现IViewCreator!");this.mediator=t.createMediator(),e.destroy(),this.mediator.services?this.__initServices():this.__createUI()}__initServices(){return __awaiter(this,void 0,void 0,(function*(){for(let e=0;e<this.mediator.services.length;e++){const t=this.mediator.services[e];yield serviceManager.getService(t)}this.__createUI()}))}__createUI(){this.mediator.createUI(this.info,this.__createUICallBack.bind(this))}__createUICallBack(){this.__loadState=LoadState.Loaded,this.mediator.init(),this.mediator.inited=!0,this.__showing&&this.__show()}__addToLayer(){this.layer.addChildAt(this.mediator.viewComponent,this.zIndex),this.mediator.viewComponent.visible=!0}tick(e){if(this.__loadState!=LoadState.Loading)this.__loadState==LoadState.Loaded&&this.mediator&&this.mediator.tick(e);else{Timer.currentTime-this.__startTime>1&&LoadingView.show()}}show(e){this.__showing=!0,this.zIndex=this.getLayerChildCount(),this.data=e,this.__show()}showedUpdate(e){this.mediator&&this.__showing&&this.mediator.showedUpdate(e)}__show(){if(this.__loadState==LoadState.Null)this.__loadAssets();else if(this.__loadState==LoadState.Loading);else{if(this.__addToLayer(),LoadingView.hide(),this.mediator.show(this.data),this.data=null,!GUIManager.isOpen(this.info.key))return;this.mediator.playShowAnimation?this.mediator.playShowAnimation(this.__showAnimationPlayed):Event.emit(Event.SHOW,this.info.key)}}__showAnimationPlayed(){Event.emit(Event.SHOW,this.info.key)}hide(){this.__loadState==LoadState.Loading?this.__loadState=LoadState.Null:this.__loadState==LoadState.Loaded&&this.__showing&&(this.mediator.playHideAnimation?this.mediator.playHideAnimation(this.__hideAnimationPlayed):this.__hide())}__hideAnimationPlayed(){this.__showing&&this.__hide()}__hide(){this.mediator.viewComponent.visible=!1,this.mediator.hide(),this.__showing=!1,Event.emit(Event.HIDE,this.info.key)}destroy(){var e;console.log("UI销毁=>"+(null===(e=this.info)||void 0===e?void 0:e.key)),this.mediator.destroy(),this.mediator=void 0,this.info=void 0,this.data=null,this.__resRef&&(this.__resRef.dispose(),this.__resRef=null)}getLayerChildCount(){return this.layer.getCount()}get layer(){let e=LayerManager.getLayer(this.info.layer);if(void 0===e)throw new Error("layer："+this.info.layer+"不存在！");return e}getComponent(e){return this.mediator?this.mediator.getUIComponent(e):null}}GUIProxy.createNode=new Node("createHelpNode");class GUIManagerImpl{constructor(){this.__registered=new Map,this.__instances=new Map,this.__destryList=[],TickerManager.addTicker(this),Event.on(Event.SHOW,this.__showedHandler,this),Event.on(Event.HIDE,this.__closedHandler,this)}getUIComponent(e,t){if(!this.__instances.has(e))throw new Error("GUI："+e+"实例，不存在！");return this.__instances.get(e).getComponent(t)}getMediatorByKey(e){return this.__instances.has(e)?this.__instances.get(e).mediator:null}__showedHandler(e,t,i){let s=i;this.setGUIState(s,GUIState.Showed)}__closedHandler(e,t,i){let s=i;this.setGUIState(s,GUIState.Closed)}register(e){if(this.__registered.has(e.key))throw new Error("重复注册！");this.__registered.set(e.key,e)}unregister(e){if(!this.__registered.has(e))throw new Error("未找到要注销的界面信息！");this.__registered.delete(e)}tick(e){this.__destryList.length=0;let t=Timer.currentTime;if(this.__instances.forEach((i,s,n)=>{i.info.state==GUIState.Showed?i.tick(e):i.info.state==GUIState.Closed&&(i.info.permanence||t-i.closeTime>GUIManager.GUI_GC_INTERVAL&&this.__destryList.push(s))}),this.__destryList.length>0){let e;for(let t=0;t<this.__destryList.length;t++){const i=this.__destryList[t];e=this.__instances.get(i),e.info.state=GUIState.Null,this.__instances.delete(i),e.destroy()}}}open(e,t){this.__open(e,t),this.__checkRelation(e,!0)}__open(e,t){let i,s=this.getGUIState(e);if(s==GUIState.Null){let s=this.__registered.get(e);return i=new GUIProxy(s),i.info.state=GUIState.Showing,this.__instances.set(s.key,i),this.checkFullLayer(i),void i.show(t)}return s==GUIState.Showing?(i=this.__instances.get(e),this.checkFullLayer(i),void i.show(t)):s==GUIState.Showed?(i=this.__instances.get(e),this.checkFullLayer(i),i.showedUpdate(t),void LoadingView.hide()):s==GUIState.Closeing||s==GUIState.Closed?(i=this.__instances.get(e),i.info.state=GUIState.Showing,this.checkFullLayer(i),void i.show(t)):void 0}checkFullLayer(e){let t=LayerManager.getLayer(e.info.layer);if(t.isFullScrene){for(let i=0;i<t.openRecord.length;i++){const s=t.openRecord[i];s!=e.info.key&&this.__close(s)}t.openRecord.push(e.info.key)}}close(e,t=!0){this.__close(e,t),this.__checkRelation(e,!1)}closeAll(){this.__instances.forEach((e,t,i)=>{this.close(t,!1)})}__close(e,t=!1){let i,s=this.getGUIState(e);if(s==GUIState.Null||s==GUIState.Closed||s==GUIState.Closeing)return;if(i=this.__instances.get(e),i.closeTime=Timer.currentTime,i.info.state=GUIState.Closeing,i.hide(),!t)return;let n=LayerManager.getLayer(i.info.layer);if(n.isFullScrene&&n.openRecord.length>1){n.openRecord.pop();let e=n.openRecord.pop();this.__open(e)}}__checkRelation(e,t){let i,s=RelationManager.getRelation(e);if(s){let e;i=t?s.show:s.hide;for(let t=0;t<i.show.length;t++)e=i.show[t],this.__open(e);for(let t=0;t<i.hide.length;t++)e=i.hide[t],this.__close(e)}}getPrevLayer(){let e=LayerManager.getAllLayer();for(let t=0,i=e.length;t<i;t+=1)if(e[t].isFullScrene){if(e[t].openRecord.length>1)return e[t].openRecord[e[t].openRecord.length-2];break}}getGUIState(e){if(!this.__registered.has(e))throw new Error("GUI:"+e+"未注册！");if(!this.__instances.has(e))return GUIState.Null;return this.__instances.get(e).info.state}setGUIState(e,t){if(!this.__registered.has(e))throw new Error("GUI:"+e+"未注册！");this.__registered.get(e).state=t}isOpen(e){let t=this.getGUIState(e);return t==GUIState.Showing||t==GUIState.Showed}}class GUIMediator extends BaseMediator{constructor(){super(),this.info=null,this.viewComponent=null,this.__mask=null}createUI(e,t){if(this.info=e,null==this.info)throw new Error("GUI 信息不能为空");this.__createdCallBack=t,this.__createUI(!0)}__createUI(e){let t=this.info.packageName;if(e)this.__asyncCreator=new AsyncOperation,this.__asyncCreator.callback=this.__uiCreated.bind(this),this.__asyncCreator.createObject(t,this.info.comName);else try{let e=UIPackage.createObject(t,this.info.comName);this.__uiCreated(e)}catch(e){throw new Error("创建界面失败："+this.info.packageName+" "+this.info.comName)}}__uiCreated(e){let t=e.asCom;t.makeFullScreen(),this.info.modal?(this.ui=t,this.viewComponent=new GComponent,this.viewComponent.makeFullScreen(),this.__mask=new GGraph,this.__mask.makeFullScreen(),this.__mask.drawRect(0,Color.BLACK,GUISettings.mask_color),this.viewComponent.addChild(this.__mask),this.info.modalClose&&this.__mask.onClick(this._maskClickHandler,this),this.viewComponent.addChild(this.ui)):this.ui=this.viewComponent=t,this.ui.name=this.info.key,this.__createdCallBack&&(this.__createdCallBack(),this.__createdCallBack=null)}_maskClickHandler(){GUIManager.close(this.info.key)}init(){}show(e){if(super.show(e),this.$subMediators)for(let t=0;t<this.$subMediators.length;t++){this.$subMediators[t].show(e)}}showedUpdate(e){if(super.showedUpdate(e),this.$subMediators)for(let t=0;t<this.$subMediators.length;t++){this.$subMediators[t].showedUpdate(e)}}hide(){if(super.hide(),this.$subMediators)for(let e=0;e<this.$subMediators.length;e++){this.$subMediators[e].hide()}}close(e=!0){GUIManager.close(this.info.key,e)}tick(e){if(this.$subMediators)for(let t=0;t<this.$subMediators.length;t++){this.$subMediators[t].tick(e)}}destroy(){if(this.__mask&&(this.__mask.offClick(this._maskClickHandler,this),this.__mask.dispose(),this.__mask=null),this.viewComponent.dispose(),this.info=null,this.$subMediators)for(let e=0;e<this.$subMediators.length;e++){this.$subMediators[e].destroy()}}}class SubGUIMediator extends BaseMediator{constructor(e,t){super(),this.ui=e,this.owner=t,this.init(),this.inited=!0}destroy(){super.destroy(),this.owner=null,this.ui=null}}class Drongo{static init(e,t,i,s){if(Res.setResLoader("fgui",fguiResLoader),Injector.inject(GUIManager.KEY,GUIManagerImpl),Injector.inject(LayerManager.KEY,LayerManagerImpl),t&&t.length>0)for(let e=0;e<t.length;e++){const s=t[e];i?LayerManager.addLayer(s,new Layer(s)):LayerManager.addLayer(s,new Layer(s,i.includes(s)))}Res.getResRef(e,"Main").then(e=>{let t=e.content.json;for(let e=0;e<t.length;e++){const i=t[e];GUIManager.register(i)}s()},t=>{throw new Error("初始化引擎出错,gui配置加载错误:"+url2Key(e))})}}export{BaseMediator,Drongo,FGUIResource,GUIManagerImpl,GUIMediator,GUIProxy,GUISettings,Layer,LayerManagerImpl,SubGUIMediator,fguiResLoader};